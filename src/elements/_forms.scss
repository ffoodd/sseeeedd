@use "sass:math";
@use "../settings/variables";

/* ==================== */
/* == Forms
/* ==================== */

input,
optgroup,
select,
textarea {
	line-height: inherit;
}

input,
select,
label[for] {
	vertical-align: middle;
}

input,
button,
select,
textarea {
	border-radius: variables.$gutter * 0.25;
	font-family: inherit;
	font-size: 1em;
	padding: variables.$gutter * 0.5;
}

form,
fieldset,
.fieldset {
	max-inline-size: variables.$content-width;
}

form > * + * {
	margin-block-start: 3rem;
}

fieldset,
.fieldset {
	border: 0;
	margin: variables.$gutter auto variables.$gutter * 2;
	padding: 0;

	> p,
	> div {
		margin-block-end: inherit;
	}
}

legend:first-child {
	font-weight: 700;
	margin-block-end: inherit;
}

label[for] {
	display: block;
}

select,
#{variables.$form-fields} {
	appearance: none;
	background-color: var(--contrast);
	border: 1px solid var(--contrast-inverse);
	color: var(--muted-dark);
	inline-size: 100%;

	&:focus {
		border-color: var(--accent-light);
	}

	&[readonly] {
		background-color: var(--disabled);

		&:focus {
			border-color: var(--muted);
		}
	}

	/**
	 * Avoid zoom on iOS when focus on inputs
	 * http://stackoverflow.com/questions/2989263/disable-auto-zoom-in-input-text-tag-safari-on-iphone
	 */
	@media screen and (-webkit-min-device-pixel-ratio: 1.5) {
		font-size: 1em;
	}
}

/**
 * Prevent inner select focus indicator in Firefox
 ** @see https://developer.mozilla.org/fr/docs/Web/CSS/:-moz-focusring
 */
select:-moz-focusring {
	color: transparent;
}

input[type="image"],
#{variables.$form-radio-checkbox} {
	background-color: transparent;
	border: 0;
	inline-size: auto;
}

input[type="range"] {
	background-color: transparent;
	appearance: none;
	inline-size: 100%;
	padding: 0;

	&:focus-visible {
		&::-webkit-slider-thumb {
			box-shadow: 0 0 0 .25rem var(--accent-light);
		}

		&::-moz-range-thumb {
			box-shadow: 0 0 0 .25rem var(--accent-light);
		}
	}

	&::-webkit-slider-thumb {
		width: 1rem;
		height: 1rem;
		margin-top: -.5rem;
		background-color: var(--accent);
		border: .25rem solid var(--background);
		border-radius: 1rem;
		transition:
			background-color .15s ease-in-out,
			border-color .15s ease-in-out,
			box-shadow .15s ease-in-out;
		appearance: none;
		box-sizing: content-box;
		cursor: grab;
		filter: drop-shadow(0 0 .25rem rgb(0 0 0 / .2));

		&:active {
			cursor: grabbing;
		}
	}

	&::-webkit-slider-runnable-track {
		width: 100%;
		height: .5rem;
		color: transparent;
		cursor: pointer;
		background-color: var(--contrast);
		border-color: transparent;
		border-radius: 1rem;
		background-image: linear-gradient(to right, var(--accent-light) var(--value, 0%), var(--contrast) var(--value, 0%));
	}

	&::-moz-range-thumb {
		width: 1rem;
		height: 1rem;
		background-color: var(--accent);
		border: .25rem solid var(--background);
		border-radius: 1rem;
		transition: background-color .15s ease-in-out, border-color .15s ease-in-out, box-shadow .15s ease-in-out;
		appearance: none;
		cursor: grab;
		filter: drop-shadow(0 0 .25rem rgb(0 0 0 / .2));

		&:active {
			cursor: grabbing;
		}
	}

	&::-moz-range-track {
		width: 100%;
		height: .5rem;
		color: transparent;
		cursor: pointer;
		background-color: var(--contrast);
		border-color: transparent;
		border-radius: 1rem;
	}

	&::-moz-range-progress {
		height: .5rem;
		background-color: var(--accent-light);
		border-radius: 1rem;
	}

	@media (prefers-reduced-motion: reduce) {
		&::-webkit-slider-thumb {
			transition: none;
		}

		&::-moz-range-thumb {
			transition: none;
		}
	}

	&:disabled {
		pointer-events: none;

		&::-webkit-slider-thumb {
			background-color: var(--disabled);
		}

		&::-moz-range-thumb {
			background-color: var(--disabled);
		}
	}

	~ output {
		box-sizing: content-box;
		inline-size: 3ch;
		inset-inline-start: calc((var(--value) * 1%) - (3ch * (var(--value) / 100)));
		text-align: center;
		translate: -.5rem;
	}
}

input[type="number"],
input[type="search"] {
	appearance: textfield;
}

input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
	-webkit-appearance: none;
}

#{variables.$form-radio-checkbox} {
	&:not(:first-of-type) {
		margin-inline-start: variables.$gutter * 0.5;
	}

	+ label[for] {
		display: inline-block;
	}
}

select[multiple] {
	vertical-align: top;
}

input[list],
select:not([multiple]) {
	appearance: none;
	background: var(--contrast) no-repeat var(--select) center right .5em / 1em 1em;
}

textarea {
	resize: vertical;
	vertical-align: top;
}

/**
 * Cursors
 */
label[for],
#{variables.$form-buttons} {
	appearance: none;
	cursor: pointer;
}

form [disabled] {
	background-color: var(--disabled);
	cursor: not-allowed;
}

/**
 * Messages
 */
label [class^="label-msg"] {
	display: block;
	margin: math.div(variables.$gutter, -4) 0 variables.$gutter * 0.25;
	font-size: small;
}

.label-msg-error {
	color: var(--alert);
}

/**
 * States
 ** @note Prevent required input to be invalid on first load
 ** @link https://www.ffoodd.fr/l-etat-des-champs/
 */
#{variables.$form-fields} {
	&:not([list]):valid:focus {
		background: var(--contrast) no-repeat var(--valid) center right .5em / 1em 1.25em;
	}

	&:not([list]):invalid:not(:focus) {
		background: var(--contrast) no-repeat var(--invalid) center right .5em / 1em 1.25em;
		box-shadow: 0 0 0 .125rem var(--alert-light);
	}

	&:invalid:placeholder-shown:not(:focus) {
		box-shadow: none;
	}

	&:not([list]):required:placeholder-shown {
		background: var(--contrast) no-repeat var(--required) center right .5em / 1em 1.25em;
	}
}

/**
 * Browser reset
 *
 * 1. 'x' appears on right of search input when text is entered. This removes it
 */

[type="search"] {
	&::-webkit-search-decoration,
	&::-webkit-search-cancel-button,
	&::-webkit-search-results-button,
	&::-webkit-search-results-decoration {
		display: none; /* 1 */
	}
}
