@use "sass:math";
@use "../settings/variables";

/* ==================== */
/* == Base
/* ==================== */

/**
 * @note Some improvements taken from Ergonomize.css
 * @author Effeilo
 - @see https://github.com/Effeilo/ergonomize.css/blob/master/ergonomize.css
 * 1. Force scrollbars to always be visible to prevent awkward jumps when
 *    navigating between pages that do/do not have enough content to produce
 *    scrollbars naturally.
 * 3. Smooth scroll
 *    @see https://evilmartians.com/chronicles/scroll-to-the-future-modern-javascript-css-scrolling-implementations
 *    @see https://codepen.io/benfrain/pen/VxeLPb
 * 4. Breathing room to any content automatically scrolled to
*     @author Florens Verschelde (@fvsch)
 *    @see https://twitter.com/fvsch/status/1190277947871105027
 */
html:where([lang]) {
	box-sizing: border-box;
	caret-color: var(--accent);
	text-size-adjust: none;

	@if variables.$full-width == false {
		overflow-y: scroll; /* 1 */
	}

	position: relative;
	scroll-padding-block: 1vh; /* 3 */

	&:focus-within {
		scroll-behavior: smooth; /*2 */
	}

	// ====================
	// == Colors
	//
	// Using hsl(), calc() and var() to handle palette
	// Inspired by Sara Soueidan
	// @see https://www.sarasoueidan.com/blog/hex-rgb-to-hsl/
	//
	// 1. Analogous color is obtained by adding / removing 30deg to the colorwheel
	// @see https://stackoverflow.com/questions/14095849/calculating-the-analog-color-with-python
	// 2. Success / alert UI colors are complementary
	// 3. Contrast color switches between white/black
	// @see https://css-tricks.com/switch-font-color-for-different-backgrounds-with-css/
	// @see https://codepen.io/una/pen/VJMBbx
	// 4. Palette based on rebeccapurple:
	// @see https://meyerweb.com/eric/thoughts/2014/06/19/rebeccapurple/
	// 5. Using golden ratio for light scale
	// @see https://en.wikipedia.org/wiki/Golden_ratio
	// ====================
	color-scheme: light;
	--neutral: 0 0%;
	--treshold: 60%; // 3
	// Hues
	--hue: 240;
	--rotation: calc(var(--hue) + 30); // 1
	--right: 150;
	--wrong: calc(var(--right) + 180); // 2
	// Lightness
	--light-scale: 1.61803398875; // 5
	--lightness: 40%;
	--brighter: calc(var(--lightness) * var(--light-scale));
	--darker: calc(var(--lightness) / var(--light-scale));
	--switch: calc((var(--lightness) - var(--treshold)) * -100); // 3
	// Palette
	// @todo Using system color keywords should work
	// @todo gradients are dropped: need to switch to plain colors
	--secondary: hsl(var(--hue) 100% var(--lightness));
	--secondary-shadow: hsl(var(--hue) 100% var(--lightness) / .1);
	--secondary-light: hsl(var(--hue) 100% var(--brighter));
	--secondary-lighter: hsl(var(--hue) 100% var(--brighter) / .1);
	--secondary-dark: hsl(var(--hue) 100% var(--darker));
	--accent: hsl(var(--rotation) 50% var(--lightness)); // 4
	--accent-shadow: hsl(var(--rotation) 50% var(--lightness) / .1);
	--accent-light: hsl(var(--rotation) 50% var(--brighter));
	--accent-dark: hsl(var(--rotation) 50% var(--darker));
	--alert: hsl(var(--wrong) 100% var(--lightness));
	--alert-shadow: hsl(var(--wrong) 100% var(--lightness) / .1);
	--alert-light: hsl(var(--wrong) 100% var(--brighter));
	--alert-dark: hsl(var(--wrong) 100% var(--darker));
	--success: hsl(var(--right) 100% var(--lightness));
	--success-shadow: hsl(var(--right) 100% var(--lightness) / .1);
	--success-light: hsl(var(--right) 100% var(--brighter));
	--success-lighter: hsl(var(--right) 100% var(--brighter) / .4);
	--success-dark: hsl(var(--right) 100% var(--darker));
	--contrast: hsl(var(--neutral) var(--switch)); // 3
	--contrast-o-50: hsl(var(--neutral) var(--switch) / .5);
	--contrast-inverse: hsl(var(--neutral) calc(var(--switch) * -1)); // 3
	--muted: hsl(var(--neutral) var(--lightness));
	--muted-light: hsl(var(--neutral) var(--brighter));
	--muted-lighter: hsl(var(--neutral) var(--brighter) / .5);
	--muted-dark: hsl(var(--neutral) var(--darker));
	--disabled: hsl(var(--neutral) 90%);
	--background: hsl(var(--neutral) 96%);
	--shadow: hsl(var(--neutral) var(--darker) / .1);
	// ====================
	// == Timing functions
	//
	// @note Simple cubic-bezier curves for timing functions
	// @author David K. Piano
	// @link https://twitter.com/DavidKPiano/status/965704092545900544
	// ====================
	--enter: cubic-bezier(0, .5, .5, 1);
	--exit: cubic-bezier(.5, 0, 1, .5);
	--move: cubic-bezier(.5, 0, .5, 1);
	// ====================
	// == Icons
	//
	// With proper credits and links to TheNounProject:
	// — Download icon by Jens Windolf → https://thenounproject.com/term/download/5507/
	--download: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 72 72'><path d='M63 0H9C4.03 0 0 4.03 0 9v54c0 4.969 4.03 9 9 9h54c4.971 0 9-4.031 9-9V9c0-4.97-4.029-9-9-9zm0 63H9V9h54z'/><path d='M54 36H42V15H30v21H18l18 21z'/></svg>");
	// — External icon by Luc Poupard → https://thenounproject.com/icon/13883/
	--external: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'><path d='M91.875 62H85v23H15V15h23V0H0v100h100V62z'/><path d='M54 0v.627l17.787 17.85L52.701 38H38v24h24V49.799l20.773-20.337L99.374 46H100V0z'/></svg>");
	// — Unsafe icon by Sophie Haskind → https://thenounproject.com/icon/698506/
	--unsafe: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 47 59.5'><path d='m 44,26.5 h -3.5 v -10 C 40.5,7.402 33.098,0 24,0 H 23 C 14.801,0 7.943,5.874 6.694,13.966 c -0.295,1.91 1.015,3.698 2.925,3.993 1.916,0.297 3.699,-1.016 3.993,-2.925 C 14.319,10.454 18.355,7 23,7 h 1 c 5.238,0 9.5,4.262 9.5,9.5 v 10 H 3 c -1.657,0 -3,1.343 -3,3 v 27 c 0,1.657 1.343,3 3,3 h 41 c 1.657,0 3,-1.343 3,-3 v -27 c 0,-1.657 -1.343,-3 -3,-3 z'/></svg>");
	--anchor: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 85 85.2'><path d='M56.7 51.7l9.1 9c-2.3 5.5-8.1 9.7-17.3 11.2v-45c6.1-2.3 8-7.1 8-12.7C56.5 6.4 50.2 0 42.4 0s-14 6.3-14 14.2c0 5.6 1.9 10.4 8 12.7v45c-9.1-1.5-15-5.7-17.3-11.2l9.2-9H0v27.8l9.8-9.8c6.2 9.2 18.5 15.5 32.7 15.5 14.2 0 26.5-6.3 32.7-15.5l9.8 9.8V51.7zM42.5 19c-2.6 0-4.7-2.1-4.7-4.7s2.1-4.7 4.7-4.7 4.7 2.1 4.7 4.7-2.1 4.7-4.7 4.7z'/></svg>");
	// — Select icon by Ben Davis → https://thenounproject.com/icon/268229/
	--select: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 59 47.5'><path d='M29.414,37.657 L0.344,8.586 L8.828,0.102 L29.414,20.686 L50,0.1 L58.484,8.585 L29.414,37.657'/></svg>");
	// — Required icon by Landan Lloyd → https://thenounproject.com/icon/1371247/
	--required: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 125'><path fill='var(--alert)' d='M53.5355339 41.4644661L70 25l5 5-16.4644661 16.4644661h23.2842713v7.0710678H58.5355339L75 70l-5 5-16.4644661-16.4644661v23.2842713h-7.0710678V58.5355339L30 75l-5-5 16.4644661-16.4644661H18.1801948v-7.0710678h23.2842713L25 30l5-5 16.4644661 16.4644661V18.1801948h7.0710678z'/></svg>");
	// — Valid icon by QomarunArt → https://thenounproject.com/icon/2127850/
	--valid: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 6.3 6.1'><path fill='var(--success)' d='M0 2.6235l.898-.898 1.3851 1.3851L5.3936 0l.898.8981-4.0085 4.0085L0 2.6235z'/></svg>");
	// — Invalid icon by Aleks → https://thenounproject.com/icon/463665/
	--invalid: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 125'><path fill='var(--alert)' d='M74.749 11.109L50 35.858 25.251 11.109 11.109 25.251 35.858 50 11.109 74.749l14.142 14.142L50 64.142l24.749 24.749 14.142-14.142L64.142 50l24.749-24.749z'/></svg>");
	// — Mail icon by Aybige → https://thenounproject.com/icon/1683386/
	--mail: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 84 56'><path d='M0 0v3.7188l42 28.62504L84.000004 3.7188V0zm0 10.9688v45.03124h84.000004V10.9688L43.6875 38.46884a3.0003 3.0003 0 0 1-3.375 0z'/></svg>");
	// — Phone icon by Aybige → https://thenounproject.com/icon/1860897/
	--tel: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 46 88'><path d='M6 0C2.676 0 0 2.676 0 6v76.00005c0 3.324 2.676 6 6 6h34c3.324 0 6-2.676 6-6V6c0-3.324-2.676-6-6-6zM4 10h38v64.00005H4z'/></svg>");
}

@media (min-width: #{variables.$content-width}) {
	html:where([lang]) {
		--lightness: 30%;
	}
}

*,
*::after,
*::before {
	box-sizing: inherit;
}

body {
	background: var(--background);
	color: var(--muted-dark);
	counter-reset: footnotes;
	font: normal 400 1em/1.5 sans-serif;
	font-family: -apple-system, BlinkMacSystemFont, system-ui, sans-serif;
	margin: 0;
	min-block-size: 100vh;
	overflow-x: hidden;
	position: relative;
	-webkit-font-smoothing: subpixel-antialiased;
	text-rendering: optimizeSpeed;
}

/**
 * @note Target
 * @see https://developer.mozilla.org/en-US/docs/Web/CSS/:target
 */
@keyframes target {
	from {
		background-color: transparent;
		box-shadow: none;
		outline: .125rem solid transparent;
		outline-offset: variables.$gutter * 2;
	}
	to {
		background-color: var(--contrast);
		box-shadow: 0 0 0 .25rem var(--contrast);
		outline: .125rem solid var(--accent);
		outline-offset: .25rem;
	}
}

:target {
	animation: target .3s var(--enter) .3s forwards;
}

/**
 * @note Selection
 * @see https://developer.mozilla.org/en-US/docs/Web/CSS/::selection
 */
::selection {
	background-color: var(--accent);
	color: var(--background);
	text-shadow: none;
}

/**
 * @note Placeholders
 * @see https://developer.mozilla.org/en-US/docs/Web/CSS/::placeholder
 */
::placeholder {
	color: var(--muted);
}

/**
 * @note Focus styles
 */
a,
input,
button,
select,
summary,
textarea,
[tabindex="0"] {
	outline-offset: variables.$gutter;
	transition: outline-offset .3s var(--enter);
}

:focus {
	outline-color: transparent;
}

:focus-visible {
	box-shadow: 0 0 0 .125rem var(--contrast);
	isolation: isolate;
	outline: .125rem solid var(--accent);
	outline-offset: .125rem;
}

a {
	color: var(--secondary);
	text-decoration-style: dotted;
	text-decoration-skip-ink: auto;
	text-decoration-thickness: max(.1em, 1px);
	text-underline-offset: .25em;

	main &::before {
		background: var(--secondary);
	}

	&:hover {
		text-decoration-style: solid;
	}

	&:focus {
		text-decoration: none;
	}

	&:hover,
	&:focus {
		color: var(--secondary-dark);

		main &::before {
			background: var(--secondary-dark);
		}
	}

	&:active {
		opacity: .75;
	}
}

/**
 * @note Only to main content links
 */
main a {
	&:visited {
		color: var(--success-dark);
	}

	&[hreflang]::after {
		content: "\A0[" attr(hreflang) "]";
	}

	/**
	 * @note Using CSS masks to use colored base64 encoded SVG
	 * @link https://codepen.io/noahblon/post/coloring-svgs-in-css-background-images#css-masks-1
	 */
	&[download]::after,
	&[href^="#"]::before,
	&[href^="tel:"]::before,
	&[target$="blank"]::after,
	&[href^="http:"]::before,
	&[href^="mailto:"]::before {
		background: var(--secondary);
		block-size: .625em;
		content: "";
		display: inline-block;
		margin-inline-end: .25em;
		mask-repeat: no-repeat;
		mask-position: center center;
		inline-size: .625em;
	}

	&[download]::after {
		margin-inline-end: 0;
		margin-inline-start: .25em;
		mask-image: var(--download);
	}

	&[href^="tel:"]::before {
		mask-image: var(--tel);
	}

	&[href^="mailto:"]::before {
		mask-image: var(--mail);
	}

	&[href^="http:"]::before {
		background: var(--alert);
		mask-image: var(--unsafe);
	}

	&[href^="#"]::before {
		mask-image: var(--anchor);
	}

	&[target$="blank"]::after {
		margin-inline-end: 0;
		margin-inline-start: .25em;
		mask-image: var(--external);
	}

	@media (hover: hover) {
		&[href^="tel:"] {
			color: currentColor;
			pointer-events: none;
			text-decoration: none;

			&::before {
				display: none !important;
			}
		}
	}

	@media (prefers-contrast: more) {
		&[download]::after,
		&[href^="#"]::before,
		&[href^="tel:"]::before,
		&[target$="blank"]::after,
		&[href^="http:"]::before,
		&[href^="mailto:"]::before {
			background: LinkText;

			&:visited {
				background: VisitedText;
			}
		}
	}
}

address {
	font-size: math.div(22rem, 16);
	font-style: normal;
	padding: 0 0 0 2em;
}

code,
pre,
video,
svg {
	max-inline-size: 100%;
}

[hidden],
[role="alert"]:empty {
	display: none;
}

a,
button {
	touch-action: manipulation;
}

a svg,
button svg {
	pointer-events: none;
}

main {
	margin: 0 auto;
	outline-color: transparent;
}
