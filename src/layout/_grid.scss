@use "../abstracts/variables";

/* ==================== */
/* == Grid
/* ==================== */

/* -------------------- */
/* -- Columns
 * 1.
 * @bugfix avoiding weird gaps in Chrome
 * @affected Chrome
 * @see https://github.com/twbs/bootstrap/issues/20925
 * 2.
 * @note Avoiding break inside children isn't so well supported
 * @see https://caniuse.com/#search=break-inside
/* -------------------- */
[class*="grid"] > *,
[class*="columns"] > * {
	display: inline-block;
	margin-bottom: variables.$gutter * 2;
	max-width: 100%;
}

@media screen and (min-width: #{variables.$content-width}) {
	[class*="grid"],
	[class*="columns"] {
		column-gap: variables.$gutter * 2;
		orphans: 1; /* 1 */
		widows: 1; /* 1 */

		> * {
			page-break-inside: avoid; /* 2 */
			break-inside: avoid; /* 2 */
		}
	}

	@each $number in 2, 3, 4 {
		.grid-#{$number},
		.columns-#{$number} {
			columns: $number;
		}
	}

	/* -------------------- */
	/* -- Fixed grid
	/* -------------------- */
	@supports (display: grid) {
		[class*="grid"] {
			display: grid;
			grid-gap: variables.$gutter * 2;
			width: 100%;
		}

		@each $number in 2, 3, 4 {
			.grid-#{$number} {
				grid-template-columns: repeat(#{$number}, [col] 1fr);
			}
		}

		@each $number in 2, 3 {
			.grid-1-#{$number} {
				@extend .grid-#{$number + 1};

				> *:nth-child(even) {
					grid-column: 2 / span $number;
				}
			}

			.grid-#{$number}-1 {
				@extend .grid-#{$number + 1};

				> *:nth-child(odd) {
					grid-column: 1 / span $number;
				}
			}
		}
	}
}
