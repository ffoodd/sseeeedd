/* ==================== */
/* == Pie Charts
 **
 * @note SVG patterns inline coming from:
 * @link http://www.heropatterns.com/
/* ==================== */
/** Pie charts */
@supports (--position: calc(var(--start, 0) * .01turn)) {
  &.pie {
    margin: 0 auto;
    padding-top: calc(#{$width / 2} - #{$gutter * 2});
    position: relative;

    tbody {
      --side: calc( #{$width} / 2 );
      --hypo: calc( 1024 / 16 / 2 );
      display: table-row;

      tr {
        display: table-cell;
        transition: opacity .3s map-get( $timing-functions, 'move' );
      }

      th {
        padding-right: $gutter / 2;

        &::before {
          background: var(--color, currentColor);
          content: "";
          display: inline-block;
          height: $gutter;
          transform: translate3d(-.2rem, .1rem, 0);
          width: $gutter;
        }
      }
    }

    /**
     * @note Pie chart based on:
     *
     */
    tbody td::before {
      --position: calc(var(--start, 0) * .01turn);
      --zoom: .75;
      --part: calc( var(--value) * 3.6 );
      --main-angle: calc( var(--part) - ( 90 * ( var(--gt-25, 0) + var(--gt-50, 0) + var(--gt-75, 0) ) ) );
      --β: calc( var(--main-angle) * 0.01745329251 );
      --α: calc( ( 90 - var(--main-angle) ) * 0.01745329251 );
      @include sin(β);
      @include sin(α);
      --B: calc( var(--hypo) * var(--sin-β) );
      --A: calc( var(--hypo) * var(--sin-α) );
      --pos-B: calc( ( var(--B) * 100 / var(--hypo) ) / 2 );
      --pos-A: calc( ( var(--A) * 100 / var(--hypo) ) / 2 );
      background-color: var(--color, currentColor);
      clip-path: polygon(
       50% 50%,
       50% 0%,
       100% 0%,
       calc( 50% + ( var(--pos-B) * var(--lt-25, 1) * 1% ) + ( var(--gt-25, 0) * 50% ) ) calc( 50% - ( var(--pos-A) * 1% * var(--lt-25, 1) ) ),
       calc( 50% + ( var(--gt-25, 0) * 50% ) )                                           calc( 50% + ( var(--gt-25, 0) * 50% ) ),
       calc( 50% + ( var(--pos-A) * 1% * var(--lt-50, 1) ) + ( var(--gt-50, 0) * 50% ) ) calc( 50% + ( var(--pos-B) * 1% * var(--lt-50, 1) ) + ( var(--gt-50, 0) * 50% ) ),
       calc( 50% - ( var(--gt-50, 0) * 50% ) )                                           calc( 50% + ( var(--gt-50, 0) * 50% ) ),
       calc( 50% - ( var(--pos-B) * 1% * var(--lt-75, 1) ) - ( var(--gt-75, 0) * 50% ) ) calc( 50% + ( var(--pos-A) * 1% * var(--lt-75, 1) ) ),
       calc( 50% - ( var(--gt-75, 0) * 50% ) )                                           calc( 50% - ( var(--gt-75, 0) * 50% ) ),
       calc( 50% - ( var(--pos-A) * 1% * var(--gt-75, 0) ) )                             calc( 50% - ( var(--pos-B) * 1% * var(--gt-75, 0) ) ),
       50% 50%
      );
      /*clip-path: polygon(
       0% 0%,
       calc( ( ( ( var(--value) - 25 )  * var(--lt-25, 1 ) ) + 25 ) * 4% ) 0%,
       calc( ( var(--gt-25, 0 ) * 25% ) + 50% ) calc( ( ( ( var(--value) - 50 )  * var(--gt-25, 0 ) ) + 50 ) * 2% / var(--lt-50, 2) ),
       calc( 100% - ( ( ( var(--value) - 75 )  * var(--gt-50, 0 ) ) + 50 ) * 2% / var(--lt-75, 2) ) calc( ( var(--gt-50, 0 ) * 25% ) + 50% ),
       calc( var(--gt-75, 2 ) * 25% ) calc( ( 100% - ( ( var(--value) - 75 ) * var(--lt-100, 0 ) ) * 4% ) / var(--lt-100, 2) ),
       50% 50%,
       0% 0%
      );*/
      content: '';
      height: var(--side);
      left: 50%;
      position: absolute;
      top: 40%;
      transform:
        translate3d(-50%, -50%, 0)
        scale( var(--zoom) );
      transform-origin: center center;
      transition: transform .2s map-get( $timing-functions, 'move' );
      width: var(--side);
    }

    tbody tr:hover td::before {
      --zoom: .8;
    }

    @each $name, $pattern in $patterns {
      $i: index($patterns, ($name $pattern));

      tr:nth-child(#{$i}n + #{$i}) *::before {
        background-image: url($pattern); /* 1 */
      }
    }

    tbody:hover tr {
      opacity: .75;

      &:hover {
        opacity: 1;
      }
    }
  }

  /**
   * Using mask-image to make a Donut
   *
   * @note Based on Ana Tudor's work
   * @link https://css-tricks.com/1-html-element-5-css-properties-magic/
   * @author Ana Tudor
   *
   * @note Mask support:
   * @link https://caniuse.com/#search=mask
   */
  @supports (mask: var(--mask)) {
       &.donut {
         mask-image: radial-gradient(
           circle at 50% calc(50% - #{$gutter * 2.5}),
           transparent 0%,
           transparent var(--offset),
           palette( default, contrast) calc(var(--offset) + 1px),
           palette( default, contrast) 100%
         );
       }
   }

  /**
   * @note Custom color palette for WHCM
   * @note Inspired by Greg Whitworth's post
   * @link http://www.gwhitworth.com/blog/2017/04/how-to-use-ms-high-contrast
   */
  @media screen and (-ms-high-contrast: active) {
    &.pie {
      tbody tr *::before {
        background-color: Window;
      }

      tbody tr:nth-of-type(odd) *::before {
        background-color: WindowText;
      }
    }
  }
}
