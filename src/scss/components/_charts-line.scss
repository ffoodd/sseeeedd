/* ==================== */
/* == Line Charts
 *
 * @note Grid charts based on
 * @see https://css-tricks.com/css-charts-grid-custom-properties/
 * @author Miriam Suzanne
 *
 * @note Massively using clip-path
 * @see Bennett Feely's clippy to understand polygon() syntax
 * @link http://bennettfeely.com/clippy/
 */

@supports (clip-path: polygon(0% calc(100% - (var(--1) * 100% / var(--y))))) {
  @media screen and (min-width: em(480)) {
    .charts-line {
      --offset: calc((100% / var(--x)) / 2);
      display: grid;
      grid-template-columns: repeat(var(--x), minmax(min-content, 1fr));
      grid-template-rows: 1fr 1fr;
      padding-top: calc(#{$width / 2} - #{$gutter * 2});
      position: relative;
      text-align: center;
      transition:
        background .3s map-get( $timing-functions, 'move' ),
        color .3s map-get( $timing-functions, 'move' );

      &::after,
      &::before {
        bottom: $gutter * 4;
        content: "";
        position: absolute;
        top: 0;
        width: 100%;
      }

      &::before {
        background: linear-gradient(to top, palette( secondary, light ), palette( alert ) 75%);
        clip-path: polygon(
          0% calc(100% - (var(--1) / var(--y) * 100%)),
          var(--offset) calc(100% - (var(--1) / var(--y) * 100%)),
          calc((100% / var(--x) * 1) + var(--offset)) calc(100% - (var(--2) / var(--y) * 100%)),
          calc((100% / var(--x) * 2) + var(--offset)) calc(100% - (var(--3) / var(--y) * 100%)),
          calc((100% / var(--x) * 3) + var(--offset)) calc(100% - (var(--4) / var(--y) * 100%)),
          calc((100% / var(--x) * 4) + var(--offset)) calc(100% - (var(--5) / var(--y) * 100%)),
          calc((100% / var(--x) * 5) + var(--offset)) calc(100% - (var(--6) / var(--y) * 100%)),
          calc((100% / var(--x) * 6) + var(--offset)) calc(100% - (var(--7) / var(--y) * 100%)),
          calc((100% / var(--x) * 7) + var(--offset)) calc(100% - (var(--8) / var(--y) * 100%)),
          calc((100% / var(--x) * 8) + var(--offset)) calc(100% - (var(--9) / var(--y) * 100%)),
          calc((100% / var(--x) * 9) + var(--offset)) calc(100% - (var(--10) / var(--y) * 100%)),
          calc((100% / var(--x) * 10) + var(--offset)) calc(100% - (var(--11) / var(--y) * 100%)),
          calc((100% / var(--x) * 11) + var(--offset)) calc(100% - (var(--12) / var(--y) * 100%)),
          100% calc(100% - (var(--12) / var(--y) * 100%)),
          100% 100%,
          0% 100%
        );
        z-index: 2;
      }

      &::after {
        --scale: calc(100% / var(--y));
        background: repeating-linear-gradient(to bottom, white, white var(--scale), rgba(0, 0, 0, .25) calc(var(--scale) + #{$gutter / 8}));
        z-index: 1;
      }

      dt {
        grid-row: 1 / 1;
        margin: $gutter 0 0;
        transition: inherit;

        &::after {
          background: palette( default, contrast );
          bottom: $gutter * 4;
          content: "";
          height: calc(100% - #{$gutter * 4});
          mix-blend-mode: soft-light;
          opacity: 0;
          position: absolute;
          transition: opacity .3s map-get( $timing-functions, 'move' );
          width: calc(100% / var(--x));
          z-index: 3;
        }

        @each $number in 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 {
          &:nth-of-type(#{$number})::after {
            left: calc(100% / var(--x) * #{$number - 1});
          }
        }

        &:hover::after {
          opacity: .5;
        }

        &:hover,
        &:hover + dd {
          background: palette( default, secondary );
          color: palette( secondary );
        }
      }

      dd {
        display: initial;
        grid-row: 2 / 2;
        margin: 0;
        transition: inherit;

        &::before {
          display: none;
        }

        span {
          font-weight: bold;
        }
      }
    }

    .charts-line.points {
      &::before {
        clip-path: polygon(
          0% calc(100% - (var(--1) / var(--y) * 100%)),
          var(--offset) calc(100% - (var(--1) / var(--y) * 100%)),
          calc((100% / var(--x) * 1) + var(--offset)) calc(100% - (var(--2) / var(--y) * 100%)),
          calc((100% / var(--x) * 2) + var(--offset)) calc(100% - (var(--3) / var(--y) * 100%)),
          calc((100% / var(--x) * 3) + var(--offset)) calc(100% - (var(--4) / var(--y) * 100%)),
          calc((100% / var(--x) * 4) + var(--offset)) calc(100% - (var(--5) / var(--y) * 100%)),
          calc((100% / var(--x) * 5) + var(--offset)) calc(100% - (var(--6) / var(--y) * 100%)),
          calc((100% / var(--x) * 6) + var(--offset)) calc(100% - (var(--7) / var(--y) * 100%)),
          calc((100% / var(--x) * 7) + var(--offset)) calc(100% - (var(--8) / var(--y) * 100%)),
          calc((100% / var(--x) * 8) + var(--offset)) calc(100% - (var(--9) / var(--y) * 100%)),
          calc((100% / var(--x) * 9) + var(--offset)) calc(100% - (var(--10) / var(--y) * 100%)),
          calc((100% / var(--x) * 10) + var(--offset)) calc(100% - (var(--11) / var(--y) * 100%)),
          calc((100% / var(--x) * 11) + var(--offset)) calc(100% - (var(--12) / var(--y) * 100%)),
          100% calc(100% - (var(--12) / var(--y) * 100%)),
          100% calc((100% + #{$gutter / 4}) - (var(--12) / var(--y) * 100%)),
          calc((100% / var(--x) * 11) + var(--offset)) calc((100% + #{$gutter / 4}) - (var(--12) / var(--y) * 100%)),
          calc((100% / var(--x) * 10) + var(--offset)) calc((100% + #{$gutter / 4}) - (var(--11) / var(--y) * 100%)),
          calc((100% / var(--x) * 9) + var(--offset)) calc((100% + #{$gutter / 4}) - (var(--10) / var(--y) * 100%)),
          calc((100% / var(--x) * 8) + var(--offset)) calc((100% + #{$gutter / 4}) - (var(--9) / var(--y) * 100%)),
          calc((100% / var(--x) * 7) + var(--offset)) calc((100% + #{$gutter / 4}) - (var(--8) / var(--y) * 100%)),
          calc((100% / var(--x) * 6) + var(--offset)) calc((100% + #{$gutter / 4}) - (var(--7) / var(--y) * 100%)),
          calc((100% / var(--x) * 5) + var(--offset)) calc((100% + #{$gutter / 4}) - (var(--6) / var(--y) * 100%)),
          calc((100% / var(--x) * 4) + var(--offset)) calc((100% + #{$gutter / 4}) - (var(--5) / var(--y) * 100%)),
          calc((100% / var(--x) * 3) + var(--offset)) calc((100% + #{$gutter / 4}) - (var(--4) / var(--y) * 100%)),
          calc((100% / var(--x) * 2) + var(--offset)) calc((100% + #{$gutter / 4}) - (var(--3) / var(--y) * 100%)),
          calc((100% / var(--x) * 1) + var(--offset)) calc((100% + #{$gutter / 4}) - (var(--2) / var(--y) * 100%)),
          var(--offset) calc((100% + #{$gutter / 4}) - (var(--1) / var(--y) * 100%)),
          0% calc((100% + #{$gutter / 4}) - (var(--1) / var(--y) * 100%))
        );
        z-index: 2;
      }

      dt {
        &::before {
          --height: calc(100% - 4rem);
          --size: #{$gutter};
          background-image: linear-gradient(to top, palette( secondary, light ), palette( alert ) 75%);
          background-position-x: 0;
          background-size: 100% calc(var(--y) * 100%);
          border: 2px solid palette( default, contrast );
          border-radius: 50%;
          box-shadow: 0 0 #{$gutter / 4} rgba(0, 0, 0, .5);
          content: "";
          height: var(--size);
          position: absolute;
          transform: translate3d(calc(var(--size) / -2), calc(var(--size) / -2), 0);
          transition: transform .3s map-get( $timing-functions, 'move' );
          width: var(--size);
          z-index: 4;
        }

        @each $number in 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 {
          &:nth-of-type(#{$number})::before {
            background-position-y: calc((var(--height) - (var(--#{$number}) / var(--y) * var(--height))));
            left: calc((100% / var(--x) * #{$number - 1}) + var(--offset));
            top: calc((var(--height) - (var(--#{$number}) / var(--y) * var(--height))));
          }
        }

        &::after {
          mix-blend-mode: difference;
        }

        &:hover {
          &::before {
            transform: translate3d(calc(var(--size) / -2), calc(var(--size) / -2), 0) scale(1.5);
          }

          &::after {
            opacity: .05;
          }
        }
      }
    }
  }

  @media screen and (-ms-high-contrast: active) and (min-width: em(480)) {
    .charts-line {
      &::before {
        background: linear-gradient(to top, ButtonHighlight, Highlight 75%);
      }
    }
  }
}
