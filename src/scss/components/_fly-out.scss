/* ==================== */
/* == Fly-out
 *
 * @note The whole thing needs :focus-within support
 * @link https://caniuse.com/#search=%3Afocus-within
 * @note A polyfill is used for unsupporting browsers, adding .focus-within on matching elements
 *
 * 1. clip-path is used to visually hide subnav
 * @link https://developer.mozilla.org/fr/docs/Web/CSS/clip-path
 * @note clip is obsolete version, limited to rect() shapes
 * @link https://codepen.io/ffoodd/pen/Eolkb
 *
 * 2. Using a delay to improve unprecise mouse navigation
 * @link https://www.w3.org/WAI/tutorials/menus/flyout/#mouse-users
 * @link https://developer.mozilla.org/fr/docs/Web/CSS/transition-delay
 */

.fly-out {
  &,
  & ul {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    list-style: none;
    margin: 0;
    padding: 0;
  }

  a,
  button {
    background: palette( secondary, contrast );
    border: 0;
    border-radius: 0;
    color: palette( secondary );
    display: block;
    margin: 0;
    outline: rem( 2 ) solid transparent;
    outline-offset: $gutter * 2;
    padding: $gutter / 2 $gutter;
    text-decoration: none;
    transition: outline-offset .3s map-get($timing-functions, "enter");
    white-space: nowrap;

    &:hover,
    &:focus,
    &:active {
      background: palette( default, secondary );
      border: 0;
      color: palette( secondary, dark );
    }

    &:focus {
      box-shadow: none;
      outline: rem( 2 ) solid currentColor;
      outline-offset: 0;
    }
  }

  > * {
    background: palette( default, contrast );
    margin: $gutter / 2;
    position: relative;
    z-index: 1;

    &:hover,
    &.focus-within {
      z-index: 2;
    }

    > a,
    > button {
      &:hover,
      &:focus,
      &:active {
        background: none;
      }
    }

    > :first-child:not(:only-child) {
      padding-right: $gutter;
    }

    > :first-child:not(:only-child)::after {
      content: "â†“";
      display: inline-block;
      padding-left: $gutter / 2;
      transition: transform .3s map-get( $timing-functions, 'enter' ) .5s;
      will-change: transform;
    }
  }

  ul {
    align-items: flex-start;
    background: inherit;
    clip: rect(0, 2rem, 2rem, 0); /* 1 */
    flex-direction: column;
    font-size: inherit;
    min-width: 100%;
    padding-top: em( 40 );
    pointer-events: none;
    position: absolute;
    top: 0;
    transition: clip .3s map-get( $timing-functions, 'enter' ) .5s;
    will-change: clip;
    z-index: -1;

    li {
      min-width: inherit;
    }

    a,
    button {
      padding: $gutter / 2 $gutter;
      pointer-events: auto;
    }
  }

  > *:hover > ul,
  > *.focus-within > ul,
  > * > :first-child:not(:only-child):hover + ul,
  > * > :first-child:not(:only-child):focus + ul,
  > * > :first-child:not(:only-child):active + ul {
    box-shadow: em( 4 ) em( 4 ) 0 0 transparentize( palette( default ), .8 );
    clip: auto;  /* 1 */
    outline: 1px solid palette( muted, light );
    transition: clip .3s map-get( $timing-functions, 'exit' );
  }

  > * > :first-child:not(:only-child):hover::after,
  > * > :first-child:not(:only-child):focus::after,
  > * > :first-child:not(:only-child):active::after,
  > *:hover > :first-child:not(:only-child)::after,
  > *.focus-within > :first-child:not(:only-child)::after {
    transform: rotateX( .5turn );
    transition: transform .3s map-get( $timing-functions, 'exit' );
  }
}

@supports (clip-path: circle(150% at top right)) {
  @media screen and (min-width: em(480)) {
    .fly-out {
      &,
      & ul {
        justify-content: initial;
      }

      > *:focus-within {
        z-index: 2;

        :first-child:not(:only-child) {
          background: none;
        }
      }

      ul {
        clip: auto;
        clip-path: circle(em( 18 ) at left top); /* 1 */
        transition: clip-path .3s map-get( $timing-functions, 'enter' ) .5s; /* 2 */
        will-change: clip-path;
      }

      > *:hover > ul,
      > *:focus-within > ul,
      > * > :first-child:not(:only-child):hover + ul,
      > * > :first-child:not(:only-child):focus + ul,
      > * > :first-child:not(:only-child):active + ul {
        box-shadow: em( 4 ) em( 4 ) 0 0 transparentize( palette( default ), .8 );
        clip-path: circle(150% at top right);
        outline: 1px solid palette( muted, light );
        transition: clip-path .3s map-get( $timing-functions, 'exit' );
      }

      > *:focus-within > :first-child:not(:only-child)::after {
        transform: rotateX( .5turn );
        transition: transform .3s map-get( $timing-functions, 'exit' );
      }
    }
  }
}
