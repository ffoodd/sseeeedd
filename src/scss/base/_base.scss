/* ==================== */
/* == Base
/* ==================== */

/**
 * @note Some improvements taken from Ergonomize.css
 * @author Effeilo
 - @see https://github.com/Effeilo/ergonomize.css/blob/master/ergonomize.css
 * 1. Force scrollbars to always be visible to prevent awkward jumps when
 *    navigating between pages that do/do not have enough content to produce
 *    scrollbars naturally.
 * 2. For some Firefox.
 *    css-tricks.com/snippets/css/force-vertical-scrollbar/
 * 3. Smooth scroll
 *    @see https://evilmartians.com/chronicles/scroll-to-the-future-modern-javascript-css-scrolling-implementations
 *    @see https://codepen.io/benfrain/pen/VxeLPb
 */
html[lang] {
  box-sizing: border-box;

  @if $full-width == false {
    overflow-y: scroll;                 /* 1 */
    overflow: -moz-scrollbars-vertical; /* 2 */
  }

  position: relative;
  scroll-behavior: smooth;            /* 3 */
}

*,
*::after,
*::before {
  box-sizing: inherit;
}

body {
  background: var(--default-secondary);
  color: var(--dominant);
  counter-reset: footnotes;
  font: normal 400 1em/1.5 sans-serif;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif;
  overflow-x: hidden;
  position: relative;
  -webkit-font-smoothing: subpixel-antialiased;
  text-rendering: optimizeSpeed;
}

/**
 * @note Selection
 * @see https://developer.mozilla.org/en-US/docs/Web/CSS/::selection
 */
::selection {
  background-color: var(--accent);
  color: var(--default-secondary);
  text-shadow: none;
}

/**
 * @note Placeholders
 * @see https://developer.mozilla.org/en-US/docs/Web/CSS/::placeholder
 */
::placeholder {
  color: var(--default-light);
}

/**
 * 1. Ensure focus outline contrast
 ** @see https://www.w3.org/WAI/WCAG21/Understanding/non-text-contrast.html#user-interface-components
 * 2. Ensure focus outline visibility by using isolation property
 ** @see https://developer.mozilla.org/fr/docs/Web/CSS/isolation
 ** @note Based on an idea:
 ** @author Manuel Matuzovic
 ** @see https://www.matuzo.at/blog/improving-the-keyboard-accessibility-of-codepen-embeds/#accessibility-improvements
 * 3. Allow to animate outline on focus
 ** @author Heydon Pickering
 ** @see https://www.heydonworks.com/article/shrinking-button-outlines
 */
:focus {
  outline-color: currentColor; /* 1 */
  outline-offset: 0;           /* 3 */
  isolation: isolate;          /* 2 */
}

/**
 * @note Visually hide programmatically given focus when using a hover capable pointer
 ** @see https://twitter.com/heydonworks/status/594115773871824897
 ** @see https://accessibility.blog.gov.uk/2018/08/01/supporting-users-who-change-colours-on-gov-uk/
 */
body:hover [tabindex="-1"]:focus {
    outline-color: transparent;
}

a {
  color: var(--secondary);
  outline: rem( 2 ) solid transparent;
  outline-offset: $gutter * 2;
  text-decoration-style: dotted;
  text-decoration-skip-ink: auto;
  transition: outline-offset .3s map-get($timing-functions, "enter");

  &:hover,
  &:focus {
    color: var(--secondary-dark);
  }

  &:active {
    opacity: .75;
    transition: none;
  }
}

/**
 * @note Only to main content links
 */
main a {
  &:visited {
    color: var(--success-dark);
  }

  &[href^="#"]::before,
  &[href^="tel:"]::before,
  &[target$="blank"]::after,
  &[href^="http:"]::before,
  &[href^="mailto:"]::before {
    content: "";
    display: inline-block;
    margin: 0 .25em 0 0;
  }

  &[href^="tel:"]::before {
    content: "\1f4f1";
  }

  &[href^="#"]::before {
    content: "\2693";
  }

  &[target$="blank"]::after {
    content: "\1f5d7";
    margin: 0 0 0 .25em;
  }

  &[href^="mailto:"]::after {
    display: none;
  }

  &[href^="mailto:"]::before {
    content: "\1f4e7";
  }

  &[href^="http:"]::before {
    color: var(--alert);
    content: "\1f513";
  }

  @media (hover: hover) {
    &[href^="tel:"] {
      color: currentColor;
      pointer-events: none;
      text-decoration: none;

      &::before {
        display: none !important;
      }
    }
  }

  /**
   * @note Using CSS masks to use colored base64 encoded SVG
   * @link https://codepen.io/noahblon/post/coloring-svgs-in-css-background-images#css-masks-1
   */
   @supports(mask-image: url()) {
    &[href^="#"]::before,
    &[href^="tel:"]::before,
    &[target$="blank"]::after,
    &[href^="http://"]::before,
    &[href^="mailto:"]::before {
      background: currentColor;
      content: "";
      height: .625em;
      mask-repeat: no-repeat;
      mask-position: center center;
      width: .625em;
    }

    &[href^="#"]::before {
      mask-image: url("#{map-get( $icons, "anchor" )}");
    }

    &[target$="blank"]::after {
      mask-image: url("#{map-get( $icons, "external" )}");
    }

    &[href^="http://"]::before {
      background: var(--alert);
      mask-image: url("#{map-get( $icons, "unsafe" )}");
    }

    &[href^="mailto:"]::before {
      mask-image: url("#{map-get( $icons, "mail" )}");
    }

    @media (hover: hover) {
      &[href^="tel:"]::before {
        mask-image: url("#{map-get( $icons, "tel" )}");
      }
    }
  }
}

address {
  font-size: rem( 22 );
  font-style: normal;
  padding: 0 0 0 2em;
}

code,
pre,
video,
svg {
  max-width: 100%;
}

[hidden],
[role="alert"]:empty {
  display: none;
}

a svg,
button svg {
  pointer-events: none;
}

main {
  margin: 0 auto;
  outline-color: transparent;
}

@media screen and (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0s !important;
    transition: none !important;
    scroll-behavior: auto !important;
  }
}

/**
 * Handle high contrast mode in Windows
 * @link http://adrianroselli.com/2017/12/tweaking-text-level-styles.html
 */
@media screen and (-ms-high-contrast: active) {
  a svg,
  button svg {
    background: none;
    border-color: buttonText;
    fill: buttonText;
  }

  mark {
    background-color: highlight;
    color: highlightText;
  }
}
