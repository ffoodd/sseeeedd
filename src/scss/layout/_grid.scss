/* ==================== */
/* == Grid
/* ==================== */

/* -------------------- */
/* -- Columns
 *
 * @note Avoiding break inside children isn't so well supported
 * @see https://caniuse.com/#search=break-inside
/* -------------------- */
[class*="grid"] > *,
[class*="columns"] > * {
  display: inline-block;
  margin-bottom: $gutter * 2;
}

@media screen and (min-width: em(480)) {
  [class*="grid"],
  [class*="columns"] {
    column-gap: $gutter * 2;
    
    > * {
      page-break-inside: avoid; /* 1 */
      break-inside: avoid;      /* 1 */
    }
  }

  @each $number in 2, 3, 4 {
    .grid-#{$number},
    .columns-#{$number} {
      columns: $number;
    }
  }
  
  /* -------------------- */
  /* -- Fixed grid
  /* -------------------- */  
  @supports (display: grid) {
    [class*="grid"] {
      display: grid;
      grid-gap: $gutter * 2;
    }

    @each $number in 2, 3, 4 {
      .grid-#{$number} {
        grid-template-columns: repeat(#{$number}, [col] 1fr);
      }
    }
    
    @each $number in 2, 3 {
      .grid-1-#{$number} {
        @extend .grid-#{$number + 1};
        
        > *:nth-child(even) {
          grid-column: 2 / span $number;
        }
      }
      
      .grid-#{$number}-1 {
        @extend .grid-#{$number + 1};
        
        > *:nth-child(odd) {
          grid-column: 1 / span $number;
        }
      }
    }
  }
}