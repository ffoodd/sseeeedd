@use "sass:math";
@use "../settings/variables";

/* ==================== */
/* == Fly-out
 *
 * @note The whole thing needs :focus-within support
 * @link https://caniuse.com/#search=%3Afocus-within
 *
 * 1. clip-path is used to visually hide subnav
 * @link https://developer.mozilla.org/fr/docs/Web/CSS/clip-path
 * @note clip is obsolete version, limited to rect() shapes
 * @link https://codepen.io/ffoodd/pen/Eolkb
 *
 * 2. Using a delay to improve unprecise mouse navigation
 * @link https://www.w3.org/WAI/tutorials/menus/flyout/#mouse-users
 * @link https://developer.mozilla.org/fr/docs/Web/CSS/transition-delay
 */

.fly-out {
	&,
	& ul {
		display: flex;
		flex-wrap: wrap;
		list-style: none;
		margin: 0;
		padding: 0;
	}

	a,
	button {
		background: var(--contrast);
		border: 0;
		border-radius: 0;
		color: var(--secondary);
		display: block;
		margin: 0;
		padding: variables.$gutter * 0.5 variables.$gutter;
		text-decoration: none;
		white-space: nowrap;

		&:hover,
		&:focus,
		&:active {
			background: var(--background);
			border: 0;
			color: var(--secondary-dark);
		}
	}

	> * {
		background: var(--contrast);
		margin: variables.$gutter * 0.5;
		position: relative;
		z-index: 1;

		&:first-child {
			margin-inline-start: 0;
		}

		&:hover,
		&:focus-within {
			z-index: 2;
		}

		> a,
		> button {
			&:hover,
			&:focus,
			&:active,
			&:focus-visible {
				background: none;
			}
		}

		> button {
			padding-inline-end: variables.$gutter;
		}

		> button::after {
			content: "â†“";
			display: inline-block;
			padding-inline-start: variables.$gutter * 0.5;
			transition: transform .3s var(--enter) .5s;
			will-change: transform;
		}
	}

	ul {
		align-items: flex-start;
		background: inherit;
		clip-path: circle(1.125rem at left top); /* 1 */
		flex-direction: column;
		font-size: inherit;
		min-inline-size: 100%;
		padding-block-start: 2.5rem;
		position: absolute;
		inset-block-start: 0;
		transition: clip-path .3s var(--enter) .5s;
		will-change: clip-path;
		z-index: -1;

		li {
			min-inline-size: inherit;
		}

		a,
		button {
			padding: variables.$gutter * 0.5 variables.$gutter;
		}
	}

	> *:hover > ul,
	> *:focus-within > ul,
	> * > button:hover + ul,
	> * > button:focus + ul,
	> * > button:active + ul {
		box-shadow: .25rem .25rem 0 0 var(--shadow);
		clip-path: circle(150% at top right);
		outline: 1px solid var(--muted-light);
		transition: clip-path .3s var(--exit);
	}

	> * > button:hover::after,
	> * > button:focus::after,
	> * > button:active::after,
	> *:hover > button::after,
	> *:focus-within > button::after {
		transform: rotateX(.5turn);
		transition: transform .3s var(--exit);
	}
}
