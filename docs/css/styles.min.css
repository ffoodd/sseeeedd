.no-margin{margin:0 !important}.no-padding{padding:0 !important}.no-border{border:0 !important}.no-list{list-style:none !important;padding:0}.no-event{pointer-events:none !important}.list-inline>li{display:inline}.ml-auto{margin-left:auto !important}.mt-auto{margin-top:auto !important}.no-background{background:none !important}.mr-1{margin-right:1rem !important}.mt-0{margin-top:0 !important}.ml-1{margin-left:1rem !important}.mb-1{margin-bottom:1rem !important}.p-relative{position:relative !important}.d-flex{align-items:center;display:flex !important;flex-wrap:wrap}.d-block{display:block !important}.align-top{align-items:flex-start !important}.align-end{place-self:flex-end !important}.flex-column{flex-direction:column !important}.fw-400{font-weight:normal !important}.fw-700{font-weight:bold !important}.f-left{float:left}[class*="--s"]{font-size:.875rem;line-height:1.5}[class*="--l"]{font-size:1.25rem;line-height:1.05}[class*="--xl"]{font-size:1.5rem;line-height:1.75;margin:2em 0}.muted{color:gray !important}.muted em,.muted strong{color:#f5f5f5}.clr-default{color:dimgray !important}.clr-alert{color:crimson !important}.clr-success{color:#00ff7f !important}.clr-accent{color:#639 !important}.clr-dominant{color:#444 !important}.clr-secondary{color:#0000cd !important}.bg-alert{background-color:crimson;color:#fff}.bg-alert *{color:inherit}.bg-alert a:hover,.bg-alert a:focus{color:inherit;opacity:.75}.bg-success{background-color:#00ff7f;color:#444}.bg-success *{color:inherit}.bg-success a:hover,.bg-success a:focus{color:inherit;opacity:.75}.bg-accent{background-color:#639;color:#fff}.bg-accent *{color:inherit}.bg-accent a:hover,.bg-accent a:focus{color:inherit;opacity:.75}.bg-dominant{background-color:#444;color:#fff}.bg-dominant *{color:inherit}.bg-dominant a:hover,.bg-dominant a:focus{color:inherit;opacity:.75}.bg-secondary{background-color:#0000cd;color:#fff}.bg-secondary *{color:inherit}.bg-secondary a:hover,.bg-secondary a:focus{color:inherit;opacity:.75}.bg-default{background-color:dimgray;color:#fff}.bg-default *{color:inherit}.bg-default a:hover,.bg-default a:focus{color:inherit;opacity:.75}@media screen and (-ms-high-contrast: active){.clr-success,.clr-dominant{color:buttonFace !important}.clr-secondary{color:window !important}.muted{color:grayText !important}.muted em,.muted strong{color:windowText}.bg-success,.bg-dominant{background-color:buttonFace;color:buttonText}.bg-secondary{background-color:window;color:windowText}@supports (--css: var(--iables)){.clr-alert,.clr-accent{color:highlight !important}.bg-alert,.bg-accent{background-color:highlight;color:highlightText}}}.rounded{border-radius:50%}.sr-only,.visually-hidden,.toggle-input{border:0 !important;clip:rect(1px, 1px, 1px, 1px) !important;-webkit-clip-path:inset(50%) !important;clip-path:inset(50%) !important;height:1px !important;overflow:hidden !important;padding:0 !important;position:absolute !important;width:1px !important;white-space:nowrap !important}.sr-only-focusable:focus,.sr-only-focusable:active{clip:auto !important;-webkit-clip-path:none !important;clip-path:none !important;height:auto !important;overflow:visible !important;width:auto !important;white-space:normal !important}/*! normalize.css v7.0.0 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,footer,header,nav,section{display:block}h1{font-size:2em;margin:0.67em 0}figcaption,figure,main{display:block}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace, monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:inherit}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace, monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}button,html [type="button"],[type="reset"],[type="submit"]{-webkit-appearance:button}button::-moz-focus-inner,[type="button"]::-moz-focus-inner,[type="reset"]::-moz-focus-inner,[type="submit"]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type="button"]:-moz-focusring,[type="reset"]:-moz-focusring,[type="submit"]:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:0.35em 0.75em 0.625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}[type="checkbox"],[type="radio"]{box-sizing:border-box;padding:0}[type="number"]::-webkit-inner-spin-button,[type="number"]::-webkit-outer-spin-button{height:auto}[type="search"]{-webkit-appearance:textfield;outline-offset:-2px}[type="search"]::-webkit-search-cancel-button,[type="search"]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details,menu{display:block}summary{display:list-item}canvas{display:inline-block}template{display:none}[hidden]{display:none}button,input,optgroup,select,textarea{line-height:1.5}label,input[type="submit"],input[type="reset"],input[type="button"],button,.button{cursor:pointer}form [disabled],form [readonly]{cursor:not-allowed}label,.label,button,.button,input,select{vertical-align:middle}input,button,select,textarea{padding:.5em;border-radius:.25em;font-family:inherit;font-size:1em}form input[type="text"],form input[type="number"],form input[type="search"],form input[type="password"],form input[type="email"],form input[type="url"],form input[type="tel"],form input[type="date"],form input[type="time"],form input[type="datetime-local"],form input[type="month"],form input[type="week"],form input[type="color"],form input[type="file"],form textarea,form input[type="range"],form select,.form input[type="text"],.form input[type="number"],.form input[type="search"],.form input[type="password"],.form input[type="email"],.form input[type="url"],.form input[type="tel"],.form input[type="date"],.form input[type="time"],.form input[type="datetime-local"],.form input[type="month"],.form input[type="week"],.form input[type="color"],.form input[type="file"],.form textarea,.form input[type="range"],.form select,fieldset input[type="text"],fieldset input[type="number"],fieldset input[type="search"],fieldset input[type="password"],fieldset input[type="email"],fieldset input[type="url"],fieldset input[type="tel"],fieldset input[type="date"],fieldset input[type="time"],fieldset input[type="datetime-local"],fieldset input[type="month"],fieldset input[type="week"],fieldset input[type="color"],fieldset input[type="file"],fieldset textarea,fieldset input[type="range"],fieldset select,.fieldset input[type="text"],.fieldset input[type="number"],.fieldset input[type="search"],.fieldset input[type="password"],.fieldset input[type="email"],.fieldset input[type="url"],.fieldset input[type="tel"],.fieldset input[type="date"],.fieldset input[type="time"],.fieldset input[type="datetime-local"],.fieldset input[type="month"],.fieldset input[type="week"],.fieldset input[type="color"],.fieldset input[type="file"],.fieldset textarea,.fieldset input[type="range"],.fieldset select{width:100%}::-ms-clear{display:none}@media screen and (-webkit-min-device-pixel-ratio: 1.5){input[type="text"],input[type="number"],input[type="search"],input[type="password"],input[type="email"],input[type="url"],input[type="tel"],input[type="date"],input[type="time"],input[type="datetime-local"],input[type="month"],input[type="week"],input[type="color"],input[type="file"],textarea,select{font-size:1em}}fieldset,.fieldset{margin-bottom:1em;padding:0;border:none}@media screen and (min-width: 48.0625em){fieldset,.fieldset{margin-right:auto;margin-left:auto;max-width:37.5em}}fieldset>div,.fieldset>div{margin-bottom:1em}legend{margin-bottom:1em;font-weight:bold}::-webkit-input-placeholder{color:#a9a9a9}::-moz-placeholder{color:#a9a9a9;opacity:1}:-ms-input-placeholder{color:#a9a9a9}label,.label{display:block}input[type="checkbox"]+label,input[type="radio"]+label{display:inline-block}input[type="text"],input[type="number"],input[type="search"],input[type="password"],input[type="email"],input[type="url"],input[type="tel"],input[type="date"],input[type="time"],input[type="datetime-local"],input[type="month"],input[type="week"],input[type="color"],input[type="file"],textarea,select{border:1px solid rgba(0,0,0,0.2);background-color:#f5f5f5}input[type="text"]:focus,input[type="number"]:focus,input[type="search"]:focus,input[type="password"]:focus,input[type="email"]:focus,input[type="url"]:focus,input[type="tel"]:focus,input[type="date"]:focus,input[type="time"]:focus,input[type="datetime-local"]:focus,input[type="month"]:focus,input[type="week"]:focus,input[type="color"]:focus,input[type="file"]:focus,textarea:focus,select:focus{box-shadow:0 0 5px rgba(0,0,0,0.25);border:1px solid rgba(0,0,0,0.5)}input[type="checkbox"],input[type="radio"],input[type="image"]{width:auto;border:0;background-color:transparent}input[type="text"],input[type="number"],input[type="search"],input[type="password"],input[type="email"],input[type="url"],input[type="tel"],input[type="date"],input[type="time"],input[type="datetime-local"],input[type="month"],input[type="week"],input[type="color"],input[type="file"],textarea,input[type="submit"],input[type="reset"],input[type="button"],button,.button{-webkit-appearance:none;-moz-appearance:none}input[type="search"]{-webkit-appearance:textfield}input[type="color"]{padding:.1em 0;width:2.375em;height:2.25em}input[type="checkbox"]:focus,input[type="radio"]:focus{outline:1px dotted}.checkbox-group,.radio-group{margin-bottom:0}.checkbox-group legend,.radio-group legend{margin-bottom:0;font-weight:normal}.checkbox-group>div,.radio-group>div{margin-top:0}.toggle-field{position:relative;display:inline-block;width:2.5em;vertical-align:middle;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none}.toggle-field+.label{display:inline-block}.toggle-label{overflow:hidden;padding:0;height:1.5625em;line-height:1.5625em;border:2px solid transparent;border-radius:.25em;background-color:rgba(0,0,0,0.25);text-indent:100%;transition:all 0.3s cubic-bezier(0, 0.5, 0.5, 1)}input[type="checkbox"]+.toggle-label,input[type="radio"]+.toggle-label{display:block}.toggle-label:before{content:"";position:absolute;top:0;bottom:0;display:block;margin:0;width:1.5em;right:1em;border:2px solid rgba(0,0,0,0.25);border-radius:.25em;background:#f5f5f5;transition:all 0.3s cubic-bezier(0, 0.5, 0.5, 1) 0s}.toggle-input:checked+.toggle-label{background-color:#000;border-color:#000}.toggle-input:checked+.toggle-label:before{right:0;border-color:#000}select[multiple]{vertical-align:top}textarea{vertical-align:top;resize:vertical}input[type="submit"],input[type="reset"],input[type="button"],button,.button{margin:.5em 0;width:auto;border:1px solid #000;background-color:#000;color:#fff}input[type="submit"]:hover,input[type="submit"]:focus,input[type="reset"]:hover,input[type="reset"]:focus,input[type="button"]:hover,input[type="button"]:focus,button:hover,button:focus,.button:hover,.button:focus{border:1px solid rgba(0,0,0,0.75);background-color:rgba(0,0,0,0.75)}input[type="reset"]{border:1px solid #000;background-color:#f5f5f5;color:#000}input[type="reset"]:hover,input[type="reset"]:focus{border:1px solid rgba(0,0,0,0.75);background-color:#f5f5f5;color:rgba(0,0,0,0.75)}.button{display:inline-block;padding:.5em;border-radius:.25em;font-family:inherit;font-size:1em;text-decoration:none}.button:active,.button:visited,.button:hover,.button:focus{color:#fff}@media screen and (min-width: 48.0625em){.form-buttons{margin-right:auto;margin-left:auto;max-width:37.5em}}div[class*="form-msg"]{padding:0 1em;margin-bottom:1em;border-radius:.25em}div[class*="form-msg"] p:first-child{margin-top:1em}label [class^="label-msg"],.label [class^="label-msg"]{display:block;margin:-.25em 0 .25em 0;font-size:.9em}.form-msg-help{color:dimgray;background-color:#dcdcdc;border:1px solid dimgray}.label-msg-help{color:dimgray}.form-msg-error{color:#b22222;background-color:#f4c5c5;border:1px solid #b22222}.label-msg-error{color:#b22222}.form-error input,.form-error select,.form-error textarea{border:1px solid #b22222;box-shadow:0 0 5px 0 rgba(178,34,34,0.5)}.form-msg-confirmation{color:#00ff7f;background-color:#fff;border:1px solid #00ff7f}.form-valid input,.form-valid select,.form-valid textarea{border:1px solid #00ff7f;box-shadow:0 0 5px 0 rgba(0,255,127,0.5)}.token.comment,.token.prolog,.token.doctype,.token.cdata{color:gray}.token.punctuation{color:#00bfff}.namespace{opacity:.7}.token.property,.token.tag,.token.boolean,.token.number,.token.constant,.token.symbol{color:#00ff7f}.token.selector,.token.attr-name,.token.string,.token.char,.token.builtin,.token.inserted{color:#00bfff}.token.operator,.token.entity,.token.url,.language-css .token.string,.style .token.string,.token.variable{color:Orange}.token.atrule,.token.attr-value,.token.keyword{color:#8a2be2}.token.regex,.token.important{color:crimson}.token.important,.token.bold{font-weight:bold}.token.italic{font-style:italic}.token.entity{cursor:help}.token.deleted{color:#b22222}.dialog[aria-hidden="true"],[data-a11y-dialog-native]>:first-child{display:none}dialog{border-radius:.375rem;max-width:90%;position:fixed;top:50%;transform:translate3d(0, -50%, 0);z-index:13}dialog[open]{display:block}.dialog>:first-child{background:rgba(105,105,105,0.5);bottom:0;left:0;position:fixed;right:0;top:0;z-index:12}[role="tablist"]{color:#0000cd;margin-bottom:0}[role="tab"]{border:1px solid transparent;border-radius:.25rem .25rem 0 0;color:inherit;cursor:pointer;display:inline-block;padding:1rem;transform:translateY(1px)}[role="tab"][aria-selected="true"]{background:#fff;border:1px solid rgba(0,0,205,0.25);border-bottom-color:#fff;color:#0000cd}[role="tab"]:active,[role="tab"]:focus{outline:none}[role="tabpanel"]{background:#fff;border:1px solid rgba(0,0,205,0.25);border-radius:.25rem;padding:1rem}[role="tabpanel"]:first-of-type{border-radius:0 .25rem .25rem .25rem}[role="tabpanel"][aria-hidden="true"]{display:none}@media screen and (-ms-high-contrast: active){[role="tab"][aria-selected="true"]{border-color:buttonText buttonText buttonFace}}html[lang]{box-sizing:border-box;overflow-y:scroll;overflow:-moz-scrollbars-vertical;position:relative;scroll-behavior:smooth}*,*::after,*::before{box-sizing:inherit}body{background:#f5f5f5;color:#444;counter-reset:footnotes;font:normal 400 1em/1.5 sans-serif;font-family:-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif;overflow-x:hidden;position:relative;-webkit-font-smoothing:subpixel-antialiased;text-rendering:optimizeSpeed}::-moz-selection{background-color:#639;color:#f5f5f5;text-shadow:none}::selection{background-color:#639;color:#f5f5f5;text-shadow:none}:focus{outline-color:currentColor !important}a{color:#0000cd;-webkit-text-decoration-style:dotted;text-decoration-style:dotted;text-decoration-skip-ink:auto}a:hover,a:focus{color:#00008b}a:active,a:visited{opacity:.75}a[target$="blank"]::after{content:url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='rebeccapurple' height='10' width='10' viewBox='0 0 100 100'%3E%3Cpath d='M91.875 62H85v23H15V15h23V0H0v100h100V62z'/%3E%3Cpath d='M54 0v.627l17.787 17.85L52.701 38H38v24h24V49.799l20.773-20.337L99.374 46H100V0z'/%3E%3C/svg%3E");padding-left:.25em}a:hover[target$="blank"]::after,a:focus[target$="blank"]::after{content:url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='indigo' height='10' width='10' viewBox='0 0 100 100'%3E%3Cpath d='M91.875 62H85v23H15V15h23V0H0v100h100V62z'/%3E%3Cpath d='M54 0v.627l17.787 17.85L52.701 38H38v24h24V49.799l20.773-20.337L99.374 46H100V0z'/%3E%3C/svg%3E")}address{font-size:1.375rem;font-style:normal;padding:0 0 0 2em}code,pre,video,svg{max-width:100%}[hidden],[role="alert"]:empty{display:none}a svg,button svg{pointer-events:none}main{margin:0 auto;outline:none}@media screen and (prefers-reduced-motion: reduce){*{-webkit-animation:none !important;animation:none !important;transition:none !important}}@media screen and (-ms-high-contrast: active){a svg,button svg{background:none;border-color:buttonText;fill:buttonText}mark{background-color:highlight;color:highlightText}}p,ul,ol,dl,pre,td,th,caption{font-size:1em;line-height:1.5;margin:1.5em 0}.hn,h1,.h1,h2,.h2,h3,.h3,h4,.h4,h5,.h5,h6,.h6,blockquote footer,b,dt,strong,cite{color:#000;font-weight:700;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-rendering:optimizelegibility}.hn:first-child,h1:first-child,.h1:first-child,h2:first-child,.h2:first-child,h3:first-child,.h3:first-child,h4:first-child,.h4:first-child,h5:first-child,.h5:first-child,h6:first-child,.h6:first-child,blockquote footer:first-child,b:first-child,dt:first-child,strong:first-child,cite:first-child{margin-top:0}h1,.h1{color:#0000cd;font-size:2.875em;line-height:1.0434;margin:1.04348em 0 .52174em}h1 strong,.h1 strong{color:#444}h2,.h2{color:#639;font-size:2.5em;line-height:1.2;margin:1.2em 0 .6em}h3,.h3{color:#444;font-size:2.25em;line-height:1.3334;margin:1.33333em 0 .66667em}h4,.h4{font-size:1.875em;line-height:1.6;margin:1.6em 0 .8em}h5,.h5{font-size:1.625em;line-height:1.8462;margin:1.84615em 0 .92308em}h6,.h6{font-size:1.375em;line-height:1.0909;margin:2.18182em 0 1.09091em}textarea,table,td,th,div,p{word-wrap:break-word;-webkit-hyphens:auto;-ms-hyphens:auto;hyphens:auto}li p,li ul,li ol{margin-bottom:0;margin-top:0}blockquote{font-size:1em;font-style:italic;line-height:1.5;margin:3em 0 1.5em;max-width:100%;padding-left:7em;position:relative;quotes:"«\00A0" "\00A0»";z-index:2}blockquote::before{color:#a9a9a9;content:open-quote;font-size:10em;font-weight:700;left:0;line-height:0;opacity:.25;position:absolute;top:0;z-index:-1}blockquote footer{font-style:normal}abbr[title]{border-bottom:1px dotted;cursor:help;text-decoration:none;text-transform:uppercase}small,.small{font-size:.875em}cite{color:#639;font-style:normal}hr{border-bottom:1px solid #fff;border-top:1px solid rgba(169,169,169,0.5);height:0}var,code{font:inherit;line-height:1}pre{background:#444;border:0;border-radius:.25em;color:#fff;direction:ltr;font-family:"Fira Mono", "Consolas", "Monaco", "Andale Mono", monospace;font-size:small;line-height:1.5;-webkit-hyphens:none;-ms-hyphens:none;hyphens:none;-moz-tab-size:4;-o-tab-size:4;tab-size:4;overflow-x:auto;padding:2em 1em .5em;text-align:left;white-space:pre;word-break:normal;word-spacing:normal;word-wrap:normal}pre::before{background:crimson;border-radius:50%;box-shadow:1.5em 0 0 0 Orange,3em 0 0 0 #00ff7f;content:"";display:block;height:1rem;transform:translateY(-1rem);width:1rem}:not(pre)>var,:not(pre)>code{border:1px solid;border-radius:.2em;color:#639;display:inline-block;font-family:inherit;padding:.1em;white-space:nowrap}:not(pre)>var{background:#fff;border-style:dashed;color:indigo}dl,dd{margin:0}dd+dt{margin:1rem 0 0}dt dfn{font-style:normal}figure dt{clear:left;float:left;margin:0 0 1rem}figure dd{display:flex;margin:0 0 1rem}figure dd::before{border-top:1px dotted;content:"";flex:1;margin:0 .5rem;transform:translateY(.9rem)}figure dl+figcaption{text-align:center}img[alt]{display:inline-block;max-width:100%;position:relative;vertical-align:middle}img[alt]:not([src$=".svg"]){height:auto}img[alt]::after{background:white;bottom:0;content:attr(alt) "\a" "— " attr(src);left:0;padding:.5em;position:absolute;top:0;width:100%;white-space:pre-wrap}svg{fill:currentColor}figure[role="group"]{background:white;margin:1.5em auto;overflow:hidden;padding:1em}figure[role="group"] figcaption{display:block;font-size:.875em;padding:1em 0}@media (inverted-colors){img{-webkit-filter:invert(100%);filter:invert(100%)}}@media screen and (-ms-high-contrast: active){img{-webkit-filter:brightness(1) contrast(1) saturate(1.5);filter:brightness(1) contrast(1) saturate(1.5)}}table{background:#fff;border-collapse:collapse;caption-side:top;-webkit-font-feature-settings:"tnum";font-feature-settings:"tnum";margin-bottom:1.5rem;width:100%;vertical-align:top}table>caption:first-child{font-style:italic;margin:0;padding:2.5rem 1rem}th,td{padding:.5rem .75rem;text-align:left}thead th,tbody th,thead td,tbody td{border-bottom:1px solid #f5f5f5}th,table strong{color:dimgray}td{line-height:1.25;max-width:100%}tbody{border:1px solid #f5f5f5}details{border:.25em solid #000;padding:1rem}details+details{border-top-width:0}details[open] summary ~ *{-webkit-animation:slide-down 0.5s cubic-bezier(0, 0.5, 0.5, 1);animation:slide-down 0.5s cubic-bezier(0, 0.5, 0.5, 1)}details summary{background:#444;color:#fff;cursor:pointer;margin:-1rem;padding:inherit;transition:background 0.2s cubic-bezier(0, 0.5, 0.5, 1) details summary}details summary :hover,details summary:focus{background:#000}details summary ~ *{margin-top:2rem}@-webkit-keyframes slide-down{0%,50%{opacity:0;transform:translateY(1.5em)}}@keyframes slide-down{0%,50%{opacity:0;transform:translateY(1.5em)}}@media screen and (min-width: 30em){@supports (--css: var(--iables)){.vertical{display:flex}.vertical details{flex:0;min-width:3.5em;overflow:hidden}.vertical details[open]{flex:1}.vertical details[open] summary ~ *{-webkit-animation:slide-in 0.5s cubic-bezier(0, 0.5, 0.5, 1);animation:slide-in 0.5s cubic-bezier(0, 0.5, 0.5, 1)}.vertical details+details{border-width:.25em .25em .25em 0}.vertical details summary{float:left;min-height:20em;-webkit-writing-mode:vertical-lr;-ms-writing-mode:tb-lr;writing-mode:vertical-lr;-webkit-writing-mode:sideways-lr;-ms-writing-mode:sideways-lr;writing-mode:sideways-lr}.vertical details summary ~ *{padding-left:3.5em}.vertical details summary ~ *>*:first-child{margin-top:0}}}@-webkit-keyframes slide-in{0%,50%{opacity:0;transform:translateX(-1.5em)}}@keyframes slide-in{0%,50%{opacity:0;transform:translateX(-1.5em)}}form>*+*{margin-top:2em}[type="radio"]:not(:first-of-type),[type="checkbox"]:not(:first-of-type){margin-left:.5em}button[type]{background-color:#639;border:1px solid #639;border-radius:.25em;color:#fff;font-family:inherit;font-size:1em;line-height:1.5;margin:.5em 0;padding:.5em;vertical-align:middle;transition:all 300ms cubic-bezier(0.5, 0, 0.5, 1);width:auto;-webkit-appearance:none;-moz-appearance:none;appearance:none}button[type]:hover,button[type]:focus,button[type]:active,button[type][aria-expanded="true"]{border:1px solid rgba(102,51,153,0.75);background-color:rgba(102,51,153,0.75)}button[type]:active,button[type][aria-expanded="true"]{box-shadow:inset 0 2px rgba(255,255,255,0.2),0 0.125em 0 -0.1em rgba(0,0,0,0.15);top:.125em}button[type][disabled],button[type][disabled]:hover,button[type][disabled]:focus,button[type][disabled]:active{background-color:dimgray;color:#f5f5f5;cursor:not-allowed}body>*{background:rgba(245,245,245,0.75);margin:0 auto;padding:1rem;max-width:64em}[class*="grid"]>*,[class*="columns"]>*{display:inline-block;margin-bottom:2rem}@media screen and (min-width: 30em){[class*="grid"],[class*="columns"]{column-gap:2rem;orphans:1;widows:1}[class*="grid"]>*,[class*="columns"]>*{page-break-inside:avoid;break-inside:avoid}.grid-2,.columns-2{columns:2}.grid-3,.grid-1-2,.grid-2-1,.columns-3{columns:3}.grid-4,.grid-1-3,.grid-3-1,.columns-4{columns:4}@supports (display: grid){[class*="grid"]{display:grid;grid-gap:2rem}.grid-2{grid-template-columns:repeat(2, [col] 1fr)}.grid-3,.grid-1-2,.grid-2-1{grid-template-columns:repeat(3, [col] 1fr)}.grid-4,.grid-1-3,.grid-3-1{grid-template-columns:repeat(4, [col] 1fr)}.grid-1-2>*:nth-child(even){grid-column:2/span 2}.grid-2-1>*:nth-child(odd){grid-column:1/span 2}.grid-1-3>*:nth-child(even){grid-column:2/span 3}.grid-3-1>*:nth-child(odd){grid-column:1/span 3}}}nav ul{align-items:center;display:flex;list-style:none;margin:0;padding:0}nav a{padding:.5em 1em}nav a[aria-current]{border-bottom:.25em solid;color:#639}nav a[aria-current]:hover,nav a[aria-current]:focus,nav a[aria-current]:active{border-bottom:.25em solid}nav button[aria-current]{color:#639}nav>ul>li+li{margin-left:1rem}[id="breadcrumb"] li[aria-current]{padding-left:1rem}[id="breadcrumb"] li:not(:last-child)::after{content:"→";speak:none}[id="pagination"] li:first-child a::before{content:"← ";speak:none}[id="pagination"] li:last-child a::after{content:" →";speak:none}[id="pagination"] a{text-decoration:none}[id="pagination"] a:hover,[id="pagination"] a:focus{background:#fff}[id="pagination"] [tabindex="-1"]{color:gray;pointer-events:none}[id="pagination"] [aria-current]{background:#639;color:#fff;pointer-events:none}.note{background:#fff;border-left:1rem solid;color:dimgray;margin:1rem 0;padding:.5rem 1rem .25rem}.note *{color:inherit}a[id^="footnote-"][aria-describedby]{counter-increment:footnotes;text-decoration:none}a[id^="footnote-"][aria-describedby]::after{content:"[" counter(footnotes) "]";vertical-align:super;font-size:.875em;font-weight:400;margin-left:2px;color:#639;cursor:pointer}footer[id="footnotes"]{max-width:75ch}@-webkit-keyframes footnotes{from{color:#0000cd}}@keyframes footnotes{from{color:#0000cd}}[role="note"]:target{-webkit-animation:footnotes 0.5s cubic-bezier(0, 0.5, 0.5, 1);animation:footnotes 0.5s cubic-bezier(0, 0.5, 0.5, 1)}.tooltip{display:inline-block;position:relative}.tooltip button{margin:0}[role="tooltip"]{background:#444;bottom:calc(100% + .5em);color:#f5f5f5;left:50%;opacity:0;margin:0;padding:.25em .5em .3125em;pointer-events:none;position:absolute;transform-origin:50% calc(100% + 10px);transform:perspective(1000px) rotate3d(1, 0, 0, 45deg) translateX(-50%);transition:opacity 0.2s cubic-bezier(0, 0.5, 0.5, 1),transform 0.2s cubic-bezier(0, 0.5, 0.5, 1),visibility 0s linear 0.2s;visibility:hidden;white-space:nowrap}[role="tooltip"]::after{border-left:.25em solid transparent;border-right:.25em solid transparent;border-top:.25em solid #444;bottom:-.25em;content:"";left:calc(50% - .25em);position:absolute}.tooltip button:hover+[role="tooltip"],.tooltip button:focus+[role="tooltip"]{opacity:1;pointer-events:auto;transform:perspective(1000px) rotate3d(1, 0, 0, 0deg) translateX(-50%);transition:opacity 0.2s cubic-bezier(0.5, 0, 1, 0.5),transform 0.2s cubic-bezier(0.5, 0, 1, 0.5);visibility:visible}[role="alert"]{font-weight:bold;margin:1rem .5rem;padding:0 1rem}.bg-alert[role="alert"]{border:1px solid #b22222;box-shadow:.25em .25em 0 0 #b22222}.bg-success[role="alert"]{border:1px solid #3cb371;box-shadow:.25em .25em 0 0 #3cb371}.bg-accent[role="alert"]{border:1px solid indigo;box-shadow:.25em .25em 0 0 indigo}.bg-dominant[role="alert"]{border:1px solid #000;box-shadow:.25em .25em 0 0 #000}.bg-secondary[role="alert"]{border:1px solid #00008b;box-shadow:.25em .25em 0 0 #00008b}[class*="card"]{background:#fff;border:1px solid #a9a9a9;border-radius:.25em;color:dimgray;display:block;overflow:hidden}[class*="card"]>*{margin:0 0 1rem;padding:0 1rem}[class*="card"]>img{border-radius:.1875em .1875em 0 0}[class*="card"]>h3{color:inherit;display:inline-block;font-size:1.625em;line-height:1.2;margin:1rem 0}.card-alert{background:crimson;border-color:#b22222;color:#fff}.card-success{background:#00ff7f;border-color:#3cb371;color:#444}.card-accent{background:#639;border-color:indigo;color:#fff}.card-dominant{background:#444;border-color:#000;color:#fff}.card-secondary{background:#0000cd;border-color:#00008b;color:#fff}[class*="charts"] dd[role="presentation"]{display:none}[class*="charts"] abbr[title]{border-bottom:0;font-size:small;font-weight:normal;text-transform:none}.charts-bar dt{color:dimgray;float:left;padding:0 1rem 0 0}@supports (grid-template-columns: repeat(var(--scale, 100), minmax(0, 1fr))){.charts-bar{display:grid;grid-auto-rows:1fr;grid-row-gap:.5rem;grid-template-columns:minmax(-webkit-min-content, 12.5em) repeat(var(--scale, 100), minmax(0, 1fr)) 6ch;grid-template-columns:minmax(min-content, 12.5em) repeat(var(--scale, 100), minmax(0, 1fr)) 6ch}.charts-bar *{transition:opacity 0.2s cubic-bezier(0.5, 0, 0.5, 1)}.charts-bar dt{grid-column:1 / 1;margin:initial;text-align:right}.charts-bar dd{--size: calc(var(--scale, 100) * 100%);--position: calc(var(--value, 0) / var(--scale, 100) * 100%);background-image:linear-gradient(to right, #3cb371, #444, #0000cd, #639, crimson);background-position:var(--position) 0%;background-size:var(--size) 100%;grid-column:2/var(--value, 0);margin:initial;position:relative}.charts-bar dd span{background:inherit;-webkit-text-fill-color:transparent;-webkit-background-clip:text;font-weight:bold;left:100%;position:absolute}.charts-bar dd::before{display:none}.charts-bar:hover dt,.charts-bar:hover dd{opacity:.75}.charts-bar:hover dt:hover,.charts-bar:hover dd:hover,.charts-bar:hover dt:hover+dd{opacity:1}.charts-bar.waterfall dd:nth-of-type(1){grid-column:var(--0, 0)/var(--value, 0)}.charts-bar.waterfall dd:nth-of-type(2){grid-column:var(--1, 0)/var(--value, 0)}.charts-bar.waterfall dd:nth-of-type(3){grid-column:var(--2, 0)/var(--value, 0)}.charts-bar.waterfall dd:nth-of-type(4){grid-column:var(--3, 0)/var(--value, 0)}.charts-bar.waterfall dd:nth-of-type(5){grid-column:var(--4, 0)/var(--value, 0)}.charts-bar.waterfall dd:nth-of-type(6){grid-column:var(--5, 0)/var(--value, 0)}.charts-bar.waterfall dd:nth-of-type(7){grid-column:var(--6, 0)/var(--value, 0)}.charts-bar.waterfall dd:nth-of-type(8){grid-column:var(--7, 0)/var(--value, 0)}.charts-bar.waterfall dd:nth-of-type(9){grid-column:var(--8, 0)/var(--value, 0)}.charts-bar.waterfall dd:nth-of-type(10){grid-column:var(--9, 0)/var(--value, 0)}.charts-bar.waterfall dd:nth-of-type(11){grid-column:var(--10, 0)/var(--value, 0)}@media screen and (max-width: 30em){.charts-bar{font-size:.75em}}@media screen and (min-width: 30em){.charts-bar+figcaption{text-align:initial;text-indent:12.5rem}}@media screen and (-ms-high-contrast: active){dd{background-image:linear-gradient(to right, Window, ButtonFace, ButtonShadow, ButtonText, highlight)}}}@supports (--position: calc(var(--start, 0) * .01turn)){.charts-pie{background-color:inherit;margin:-6rem auto 0;padding-top:calc(100% + 2rem);position:relative}.charts-pie dt,.charts-pie dd{color:var(--color, currentColor);margin:initial;position:relative;z-index:2}.charts-pie dt+dd{flex:1;justify-content:flex-end;padding:0 1rem 0 .25rem}.charts-pie dt::before{background:currentColor;content:"";display:inline-block;height:1rem;transform:translate3d(-0.2rem, 0.1rem, 0);width:1rem}@media screen and (max-width: 30em){.charts-pie dt:first-of-type,.charts-pie dd:first-of-type{margin-top:6rem}}@media screen and (min-width: 30em){.charts-pie{align-items:flex-end;display:flex;flex-wrap:wrap;justify-content:center;margin:0 auto;padding-top:calc(32em - 2rem)}.charts-pie dt+dd{flex:initial}.charts-pie dt+dd::before{display:none}}.charts-pie dd[role="presentation"]{--position: calc(var(--start, 0) * .01turn);--zoom: .6;-webkit-clip-path:circle(50% at 0% 50%);clip-path:circle(50% at 0% 50%);display:block;height:calc(100% - 4rem);left:50%;overflow:hidden;position:absolute;top:0;transform:rotate(var(--position)) scale(var(--zoom));transform-origin:left center;transition:transform 0.2s cubic-bezier(0.5, 0, 0.5, 1);width:16em}.charts-pie dd[role="presentation"]::before{--position: calc(var(--value, 0) * .01turn + 1deg);background-color:var(--color, currentColor);content:"";display:initial;height:100%;left:-100%;margin:initial;position:inherit;top:0;transform:rotate(var(--position));transform-origin:right center;width:100%}.charts-pie dd:hover+dd[role="presentation"],.charts-pie dt:hover+dd+dd[role="presentation"]{--zoom: .65}.charts-pie dt:nth-of-type(1)::before,.charts-pie dt:nth-of-type(1)+*+dd[role="presentation"]::before{background-image:url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='8' height='8' viewBox='0 0 8 8'%3E%3Cg fill='%23000000'%3E%3Cpath fill-rule='evenodd' d='M0 0h4v4H0V0zm4 4h4v4H4V4z'/%3E%3C/g%3E%3C/svg%3E");background-blend-mode:soft-light}.charts-pie dt:nth-of-type(2)::before,.charts-pie dt:nth-of-type(2)+*+dd[role="presentation"]::before{background-image:url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='12' height='24' viewBox='0 0 36 72'%3E%3Cg fill-rule='evenodd'%3E%3Cg fill='%23000000'%3E%3Cpath d='M2 6h12L8 18 2 6zm18 36h12l-6 12-6-12z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");background-blend-mode:soft-light}.charts-pie dt:nth-of-type(3)::before,.charts-pie dt:nth-of-type(3)+*+dd[role="presentation"]::before{background-image:url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='14' height='24' viewBox='0 0 28 49'%3E%3Cg fill-rule='evenodd'%3E%3Cg id='hexagons' fill='%23000000' fill-rule='nonzero'%3E%3Cpath d='M13.99 9.25l13 7.5v15l-13 7.5L1 31.75v-15l12.99-7.5zM3 17.9v12.7l10.99 6.34 11-6.35V17.9l-11-6.34L3 17.9zM0 15l12.98-7.5V0h-2v6.35L0 12.69v2.3zm0 18.5L12.98 41v8h-2v-6.85L0 35.81v-2.3zM15 0v7.5L27.99 15H28v-2.31h-.01L17 6.35V0h-2zm0 49v-8l12.99-7.5H28v2.31h-.01L17 42.15V49h-2z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");background-blend-mode:soft-light}.charts-pie dt:nth-of-type(4)::before,.charts-pie dt:nth-of-type(4)+*+dd[role="presentation"]::before{background-image:url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='20' height='12' viewBox='0 0 20 12'%3E%3Cg fill-rule='evenodd'%3E%3Cg id='charlie-brown' fill='%23000000'%3E%3Cpath d='M9.8 12L0 2.2V.8l10 10 10-10v1.4L10.2 12h-.4zm-4 0L0 6.2V4.8L7.2 12H5.8zm8.4 0L20 6.2V4.8L12.8 12h1.4zM9.8 0l.2.2.2-.2h-.4zm-4 0L10 4.2 14.2 0h-1.4L10 2.8 7.2 0H5.8z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");background-blend-mode:soft-light}.charts-pie dt:nth-of-type(5)::before,.charts-pie dt:nth-of-type(5)+*+dd[role="presentation"]::before{background-image:url("data:image/svg+xml,%3Csvg width='6' height='6' viewBox='0 0 6 6' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%23000000' fill-rule='evenodd'%3E%3Cpath d='M5 0h1L0 6V5zM6 5v1H5z'/%3E%3C/g%3E%3C/svg%3E");background-blend-mode:soft-light}.charts-pie dt:nth-of-type(6)::before,.charts-pie dt:nth-of-type(6)+*+dd[role="presentation"]::before{background-image:url("data:image/svg+xml,%3Csvg width='10' height='10' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%23000000' fill-rule='evenodd'%3E%3Ccircle cx='3' cy='3' r='3'/%3E%3Ccircle cx='13' cy='13' r='3'/%3E%3C/g%3E%3C/svg%3E");background-blend-mode:soft-light}@supports ((-webkit-mask: var(--mask)) or (mask: var(--mask))){.charts-pie.donut{-webkit-mask-image:radial-gradient(circle at 50% calc(50% - 2rem), transparent 0%, transparent calc(var(--offset) / 2), #fff calc(var(--offset) / 2 + 1px), #fff 100%);mask-image:radial-gradient(circle at 50% calc(50% - 2rem), transparent 0%, transparent calc(var(--offset) / 2), #fff calc(var(--offset) / 2 + 1px), #fff 100%)}@media screen and (min-width: 30em){.charts-pie.donut{-webkit-mask-image:radial-gradient(circle at 50% calc(50% - 2rem), transparent 0%, transparent var(--offset), #fff calc(var(--offset) + 1px), #fff 100%);mask-image:radial-gradient(circle at 50% calc(50% - 2rem), transparent 0%, transparent var(--offset), #fff calc(var(--offset) + 1px), #fff 100%)}}}.charts-pie.polar dd[role="presentation"]{--scale: calc(var(--value) / 75);transform:rotate(var(--position)) scale(var(--scale))}.charts-pie.polar dd:hover+dd[role="presentation"],.charts-pie.polar dt:hover+dd+dd[role="presentation"]{--scale: calc(var(--value) / 75 * (1 + (75 - var(--value)) / 100));transform:rotate(var(--position)) scale(var(--scale))}@supports (background: conic-gradient(black, white)){.charts-pie.conic{background-image:radial-gradient(circle at 50%, #fff 0%, #fff var(--offset), transparent calc(var(--offset) + 1px), transparent calc(21.33333em - var(--offset)), #fff calc(21.33333em - var(--offset) + 1px), #fff 100%),conic-gradient(var(--c1) calc(var(--v1) * 1%), var(--c2) 0deg calc((var(--v1) + var(--v2)) * 1%), var(--c3) 0deg calc((var(--v1) + var(--v2) + var(--v3)) * 1%), var(--c4) 0deg calc((var(--v1) + var(--v2) + var(--v3) + var(--v4)) * 1%), var(--c5) 0deg calc((var(--v1) + var(--v2) + var(--v3) + var(--v4) + var(--v5)) * 1%), var(--c6) 0deg calc((var(--v1) + var(--v2) + var(--v3) + var(--v4) + var(--v5) + var(--v6)) * 1%), var(--c7) 0deg calc((var(--v1) + var(--v2) + var(--v3) + var(--v4) + var(--v5) + var(--v6) + var(--v7)) * 1%));-webkit-mask-image:none;mask-image:none}.charts-pie.conic dt::before{background-image:none}.charts-pie.conic dd[role="presentation"]{display:none}}@media screen and (min-width: 30em){.charts-pie.donut::after{-webkit-clip-path:circle(var(--offset, 5rem));clip-path:circle(var(--offset, 5rem))}.charts-pie dd[role="presentation"]{--zoom: 1;width:calc(16em - 2rem)}.charts-pie dd:hover+dd[role="presentation"],.charts-pie dt:hover+dd+dd[role="presentation"]{--zoom: 1.05}.charts-pie.polar dd[role="presentation"]{--scale: calc(var(--value) / 50)}.charts-pie.polar dd:hover+dd[role="presentation"],.charts-pie.polar dt:hover+dd+dd[role="presentation"]{--scale: calc(var(--value) / 50 * (1 + (50 - var(--value)) / 100))}}@media screen and (-ms-high-contrast: active){.charts-pie dt::before,.charts-pie dt+*+dd[role="presentation"]::before{background-color:Window}.charts-pie dt:nth-of-type(odd)::before,.charts-pie dt:nth-of-type(odd)+*+dd[role="presentation"]::before{background-color:WindowText}}}@supports ((-webkit-clip-path: polygon(0% calc(100% - (var(--1) * 100% / var(--y))))) or (clip-path: polygon(0% calc(100% - (var(--1) * 100% / var(--y)))))){@media screen and (min-width: 30em){.charts-line{--offset: calc((100% / var(--x)) / 2);display:grid;grid-template-columns:repeat(var(--x), minmax(-webkit-min-content, 1fr));grid-template-columns:repeat(var(--x), minmax(min-content, 1fr));grid-template-rows:1fr 1fr;padding-top:calc(32em - 2rem);position:relative;text-align:center;transition:background 0.3s cubic-bezier(0.5, 0, 0.5, 1),color 0.3s cubic-bezier(0.5, 0, 0.5, 1)}.charts-line::after,.charts-line::before{bottom:4rem;content:"";position:absolute;top:0;width:100%}.charts-line::before{background:linear-gradient(to top, #00bfff, crimson 75%);-webkit-clip-path:polygon(0% calc(100% - (var(--1) / var(--y) * 100%)), var(--offset) calc(100% - (var(--1) / var(--y) * 100%)), calc((100% / var(--x) * 1) + var(--offset)) calc(100% - (var(--2) / var(--y) * 100%)), calc((100% / var(--x) * 2) + var(--offset)) calc(100% - (var(--3) / var(--y) * 100%)), calc((100% / var(--x) * 3) + var(--offset)) calc(100% - (var(--4) / var(--y) * 100%)), calc((100% / var(--x) * 4) + var(--offset)) calc(100% - (var(--5) / var(--y) * 100%)), calc((100% / var(--x) * 5) + var(--offset)) calc(100% - (var(--6) / var(--y) * 100%)), calc((100% / var(--x) * 6) + var(--offset)) calc(100% - (var(--7) / var(--y) * 100%)), calc((100% / var(--x) * 7) + var(--offset)) calc(100% - (var(--8) / var(--y) * 100%)), calc((100% / var(--x) * 8) + var(--offset)) calc(100% - (var(--9) / var(--y) * 100%)), calc((100% / var(--x) * 9) + var(--offset)) calc(100% - (var(--10) / var(--y) * 100%)), calc((100% / var(--x) * 10) + var(--offset)) calc(100% - (var(--11) / var(--y) * 100%)), calc((100% / var(--x) * 11) + var(--offset)) calc(100% - (var(--12) / var(--y) * 100%)), 100% calc(100% - (var(--12) / var(--y) * 100%)), 100% 100%, 0% 100%);clip-path:polygon(0% calc(100% - (var(--1) / var(--y) * 100%)), var(--offset) calc(100% - (var(--1) / var(--y) * 100%)), calc((100% / var(--x) * 1) + var(--offset)) calc(100% - (var(--2) / var(--y) * 100%)), calc((100% / var(--x) * 2) + var(--offset)) calc(100% - (var(--3) / var(--y) * 100%)), calc((100% / var(--x) * 3) + var(--offset)) calc(100% - (var(--4) / var(--y) * 100%)), calc((100% / var(--x) * 4) + var(--offset)) calc(100% - (var(--5) / var(--y) * 100%)), calc((100% / var(--x) * 5) + var(--offset)) calc(100% - (var(--6) / var(--y) * 100%)), calc((100% / var(--x) * 6) + var(--offset)) calc(100% - (var(--7) / var(--y) * 100%)), calc((100% / var(--x) * 7) + var(--offset)) calc(100% - (var(--8) / var(--y) * 100%)), calc((100% / var(--x) * 8) + var(--offset)) calc(100% - (var(--9) / var(--y) * 100%)), calc((100% / var(--x) * 9) + var(--offset)) calc(100% - (var(--10) / var(--y) * 100%)), calc((100% / var(--x) * 10) + var(--offset)) calc(100% - (var(--11) / var(--y) * 100%)), calc((100% / var(--x) * 11) + var(--offset)) calc(100% - (var(--12) / var(--y) * 100%)), 100% calc(100% - (var(--12) / var(--y) * 100%)), 100% 100%, 0% 100%);z-index:2}.charts-line::after{--scale: calc(100% / var(--y));background:repeating-linear-gradient(to bottom, white, white var(--scale), rgba(0,0,0,0.25) calc(var(--scale) + .125rem));z-index:1}.charts-line dt{grid-row:1 / 1;margin:1rem 0 0;transition:inherit}.charts-line dt::after{background:#fff;bottom:4rem;content:"";height:calc(100% - 4rem);mix-blend-mode:soft-light;opacity:0;position:absolute;transition:opacity 0.3s cubic-bezier(0.5, 0, 0.5, 1);width:calc(100% / var(--x));z-index:3}.charts-line dt:nth-of-type(1)::after{left:calc(100% / var(--x) * 0)}.charts-line dt:nth-of-type(2)::after{left:calc(100% / var(--x) * 1)}.charts-line dt:nth-of-type(3)::after{left:calc(100% / var(--x) * 2)}.charts-line dt:nth-of-type(4)::after{left:calc(100% / var(--x) * 3)}.charts-line dt:nth-of-type(5)::after{left:calc(100% / var(--x) * 4)}.charts-line dt:nth-of-type(6)::after{left:calc(100% / var(--x) * 5)}.charts-line dt:nth-of-type(7)::after{left:calc(100% / var(--x) * 6)}.charts-line dt:nth-of-type(8)::after{left:calc(100% / var(--x) * 7)}.charts-line dt:nth-of-type(9)::after{left:calc(100% / var(--x) * 8)}.charts-line dt:nth-of-type(10)::after{left:calc(100% / var(--x) * 9)}.charts-line dt:nth-of-type(11)::after{left:calc(100% / var(--x) * 10)}.charts-line dt:nth-of-type(12)::after{left:calc(100% / var(--x) * 11)}.charts-line dt:hover::after{opacity:.5}.charts-line dt:hover,.charts-line dt:hover+dd{background:#f5f5f5;color:#0000cd}.charts-line dd{display:initial;grid-row:2 / 2;margin:0;transition:inherit}.charts-line dd::before{display:none}.charts-line dd span{font-weight:bold}.charts-line.points::before{-webkit-clip-path:polygon(0% calc(100% - (var(--1) / var(--y) * 100%)), var(--offset) calc(100% - (var(--1) / var(--y) * 100%)), calc((100% / var(--x) * 1) + var(--offset)) calc(100% - (var(--2) / var(--y) * 100%)), calc((100% / var(--x) * 2) + var(--offset)) calc(100% - (var(--3) / var(--y) * 100%)), calc((100% / var(--x) * 3) + var(--offset)) calc(100% - (var(--4) / var(--y) * 100%)), calc((100% / var(--x) * 4) + var(--offset)) calc(100% - (var(--5) / var(--y) * 100%)), calc((100% / var(--x) * 5) + var(--offset)) calc(100% - (var(--6) / var(--y) * 100%)), calc((100% / var(--x) * 6) + var(--offset)) calc(100% - (var(--7) / var(--y) * 100%)), calc((100% / var(--x) * 7) + var(--offset)) calc(100% - (var(--8) / var(--y) * 100%)), calc((100% / var(--x) * 8) + var(--offset)) calc(100% - (var(--9) / var(--y) * 100%)), calc((100% / var(--x) * 9) + var(--offset)) calc(100% - (var(--10) / var(--y) * 100%)), calc((100% / var(--x) * 10) + var(--offset)) calc(100% - (var(--11) / var(--y) * 100%)), calc((100% / var(--x) * 11) + var(--offset)) calc(100% - (var(--12) / var(--y) * 100%)), 100% calc(100% - (var(--12) / var(--y) * 100%)), 100% calc((100% + .25rem) - (var(--12) / var(--y) * 100%)), calc((100% / var(--x) * 11) + var(--offset)) calc((100% + .25rem) - (var(--12) / var(--y) * 100%)), calc((100% / var(--x) * 10) + var(--offset)) calc((100% + .25rem) - (var(--11) / var(--y) * 100%)), calc((100% / var(--x) * 9) + var(--offset)) calc((100% + .25rem) - (var(--10) / var(--y) * 100%)), calc((100% / var(--x) * 8) + var(--offset)) calc((100% + .25rem) - (var(--9) / var(--y) * 100%)), calc((100% / var(--x) * 7) + var(--offset)) calc((100% + .25rem) - (var(--8) / var(--y) * 100%)), calc((100% / var(--x) * 6) + var(--offset)) calc((100% + .25rem) - (var(--7) / var(--y) * 100%)), calc((100% / var(--x) * 5) + var(--offset)) calc((100% + .25rem) - (var(--6) / var(--y) * 100%)), calc((100% / var(--x) * 4) + var(--offset)) calc((100% + .25rem) - (var(--5) / var(--y) * 100%)), calc((100% / var(--x) * 3) + var(--offset)) calc((100% + .25rem) - (var(--4) / var(--y) * 100%)), calc((100% / var(--x) * 2) + var(--offset)) calc((100% + .25rem) - (var(--3) / var(--y) * 100%)), calc((100% / var(--x) * 1) + var(--offset)) calc((100% + .25rem) - (var(--2) / var(--y) * 100%)), var(--offset) calc((100% + .25rem) - (var(--1) / var(--y) * 100%)), 0% calc((100% + .25rem) - (var(--1) / var(--y) * 100%)));clip-path:polygon(0% calc(100% - (var(--1) / var(--y) * 100%)), var(--offset) calc(100% - (var(--1) / var(--y) * 100%)), calc((100% / var(--x) * 1) + var(--offset)) calc(100% - (var(--2) / var(--y) * 100%)), calc((100% / var(--x) * 2) + var(--offset)) calc(100% - (var(--3) / var(--y) * 100%)), calc((100% / var(--x) * 3) + var(--offset)) calc(100% - (var(--4) / var(--y) * 100%)), calc((100% / var(--x) * 4) + var(--offset)) calc(100% - (var(--5) / var(--y) * 100%)), calc((100% / var(--x) * 5) + var(--offset)) calc(100% - (var(--6) / var(--y) * 100%)), calc((100% / var(--x) * 6) + var(--offset)) calc(100% - (var(--7) / var(--y) * 100%)), calc((100% / var(--x) * 7) + var(--offset)) calc(100% - (var(--8) / var(--y) * 100%)), calc((100% / var(--x) * 8) + var(--offset)) calc(100% - (var(--9) / var(--y) * 100%)), calc((100% / var(--x) * 9) + var(--offset)) calc(100% - (var(--10) / var(--y) * 100%)), calc((100% / var(--x) * 10) + var(--offset)) calc(100% - (var(--11) / var(--y) * 100%)), calc((100% / var(--x) * 11) + var(--offset)) calc(100% - (var(--12) / var(--y) * 100%)), 100% calc(100% - (var(--12) / var(--y) * 100%)), 100% calc((100% + .25rem) - (var(--12) / var(--y) * 100%)), calc((100% / var(--x) * 11) + var(--offset)) calc((100% + .25rem) - (var(--12) / var(--y) * 100%)), calc((100% / var(--x) * 10) + var(--offset)) calc((100% + .25rem) - (var(--11) / var(--y) * 100%)), calc((100% / var(--x) * 9) + var(--offset)) calc((100% + .25rem) - (var(--10) / var(--y) * 100%)), calc((100% / var(--x) * 8) + var(--offset)) calc((100% + .25rem) - (var(--9) / var(--y) * 100%)), calc((100% / var(--x) * 7) + var(--offset)) calc((100% + .25rem) - (var(--8) / var(--y) * 100%)), calc((100% / var(--x) * 6) + var(--offset)) calc((100% + .25rem) - (var(--7) / var(--y) * 100%)), calc((100% / var(--x) * 5) + var(--offset)) calc((100% + .25rem) - (var(--6) / var(--y) * 100%)), calc((100% / var(--x) * 4) + var(--offset)) calc((100% + .25rem) - (var(--5) / var(--y) * 100%)), calc((100% / var(--x) * 3) + var(--offset)) calc((100% + .25rem) - (var(--4) / var(--y) * 100%)), calc((100% / var(--x) * 2) + var(--offset)) calc((100% + .25rem) - (var(--3) / var(--y) * 100%)), calc((100% / var(--x) * 1) + var(--offset)) calc((100% + .25rem) - (var(--2) / var(--y) * 100%)), var(--offset) calc((100% + .25rem) - (var(--1) / var(--y) * 100%)), 0% calc((100% + .25rem) - (var(--1) / var(--y) * 100%)));z-index:2}.charts-line.points dt::before{--height: calc(100% - 4rem);--size: 1rem;background-image:linear-gradient(to top, #00bfff, crimson 75%);background-position-x:0;background-size:100% calc(var(--y) * 100%);border:2px solid #fff;border-radius:50%;box-shadow:0 0 .25rem rgba(0,0,0,0.5);content:"";height:var(--size);position:absolute;transform:translate3d(calc(var(--size) / -2), calc(var(--size) / -2), 0);transition:transform 0.3s cubic-bezier(0.5, 0, 0.5, 1);width:var(--size);z-index:4}.charts-line.points dt:nth-of-type(1)::before{background-position-y:calc((var(--height) - (var(--1) / var(--y) * var(--height))));left:calc((100% / var(--x) * 0) + var(--offset));top:calc((var(--height) - (var(--1) / var(--y) * var(--height))))}.charts-line.points dt:nth-of-type(2)::before{background-position-y:calc((var(--height) - (var(--2) / var(--y) * var(--height))));left:calc((100% / var(--x) * 1) + var(--offset));top:calc((var(--height) - (var(--2) / var(--y) * var(--height))))}.charts-line.points dt:nth-of-type(3)::before{background-position-y:calc((var(--height) - (var(--3) / var(--y) * var(--height))));left:calc((100% / var(--x) * 2) + var(--offset));top:calc((var(--height) - (var(--3) / var(--y) * var(--height))))}.charts-line.points dt:nth-of-type(4)::before{background-position-y:calc((var(--height) - (var(--4) / var(--y) * var(--height))));left:calc((100% / var(--x) * 3) + var(--offset));top:calc((var(--height) - (var(--4) / var(--y) * var(--height))))}.charts-line.points dt:nth-of-type(5)::before{background-position-y:calc((var(--height) - (var(--5) / var(--y) * var(--height))));left:calc((100% / var(--x) * 4) + var(--offset));top:calc((var(--height) - (var(--5) / var(--y) * var(--height))))}.charts-line.points dt:nth-of-type(6)::before{background-position-y:calc((var(--height) - (var(--6) / var(--y) * var(--height))));left:calc((100% / var(--x) * 5) + var(--offset));top:calc((var(--height) - (var(--6) / var(--y) * var(--height))))}.charts-line.points dt:nth-of-type(7)::before{background-position-y:calc((var(--height) - (var(--7) / var(--y) * var(--height))));left:calc((100% / var(--x) * 6) + var(--offset));top:calc((var(--height) - (var(--7) / var(--y) * var(--height))))}.charts-line.points dt:nth-of-type(8)::before{background-position-y:calc((var(--height) - (var(--8) / var(--y) * var(--height))));left:calc((100% / var(--x) * 7) + var(--offset));top:calc((var(--height) - (var(--8) / var(--y) * var(--height))))}.charts-line.points dt:nth-of-type(9)::before{background-position-y:calc((var(--height) - (var(--9) / var(--y) * var(--height))));left:calc((100% / var(--x) * 8) + var(--offset));top:calc((var(--height) - (var(--9) / var(--y) * var(--height))))}.charts-line.points dt:nth-of-type(10)::before{background-position-y:calc((var(--height) - (var(--10) / var(--y) * var(--height))));left:calc((100% / var(--x) * 9) + var(--offset));top:calc((var(--height) - (var(--10) / var(--y) * var(--height))))}.charts-line.points dt:nth-of-type(11)::before{background-position-y:calc((var(--height) - (var(--11) / var(--y) * var(--height))));left:calc((100% / var(--x) * 10) + var(--offset));top:calc((var(--height) - (var(--11) / var(--y) * var(--height))))}.charts-line.points dt:nth-of-type(12)::before{background-position-y:calc((var(--height) - (var(--12) / var(--y) * var(--height))));left:calc((100% / var(--x) * 11) + var(--offset));top:calc((var(--height) - (var(--12) / var(--y) * var(--height))))}.charts-line.points dt::after{mix-blend-mode:difference}.charts-line.points dt:hover::before{transform:translate3d(calc(var(--size) / -2), calc(var(--size) / -2), 0) scale(1.5)}.charts-line.points dt:hover::after{opacity:.05}}@media screen and (-ms-high-contrast: active) and (min-width: 30em){.charts-line::before{background:linear-gradient(to top, ButtonHighlight, Highlight 75%)}}}@supports ((-webkit-clip-path: polygon(calc( 0% 0%, 100% - ( var(--1) * 100% / var(--scale) )) 100%, 100% 100%)) or (clip-path: polygon(calc( 0% 0%, 100% - ( var(--1) * 100% / var(--scale) )) 100%, 100% 100%))){.charts-radar dd::after{color:#a9a9a9;content:" / " attr(data-scale)}@media screen and (min-width: 30em){.charts-radar{--radius: 16em;--size: calc( var(--radius) / var(--scale) );--part: calc( 360deg / var(--items) );background-image:repeating-radial-gradient(circle at 50%, rgba(0,0,0,0.2), rgba(0,0,0,0.2) 2px, transparent 2px, transparent calc(var(--size) * var(--step))),repeating-radial-gradient(circle at 50%, rgba(0,0,0,0.1), rgba(0,0,0,0.1) 2px, transparent 2px, transparent var(--size));border:2px solid;border-radius:50%;height:calc( var(--radius) * 2);margin:6rem auto;position:relative;width:calc( var(--radius) * 2)}.charts-radar+figcaption{text-align:center}.charts-radar dt{--away: calc( (var(--radius) * -1) - 50% );left:50%;margin:initial;padding:0 1rem;position:absolute;top:50%;transform:translate3d(-50%, -50%, 0) rotate(calc(var(--part) * var(--index, 1))) translate(var(--away)) rotate(calc(var(--part) * var(--index, 1) * -1))}.charts-radar dt::after{content:attr(data-value) " / " attr(data-scale);color:#639;display:block;font-size:small;font-weight:400}.charts-radar dt:nth-of-type(1){--index: 1}.charts-radar dt:nth-of-type(2){--index: 2}.charts-radar dt:nth-of-type(3){--index: 3}.charts-radar dt:nth-of-type(4){--index: 4}.charts-radar dt:nth-of-type(5){--index: 5}.charts-radar dt:nth-of-type(6){--index: 6}.charts-radar dt:nth-of-type(7){--index: 7}.charts-radar dd{--skew: calc( 90deg - var(--part) );border-bottom:1px solid #8a2be2;height:50%;left:0;margin:initial;position:absolute;top:0;transform:rotate(calc(var(--part) * var(--index, 1))) skew(var(--skew));transform-origin:100% 100%;width:50%}.charts-radar dd span{--opposite: calc( 180 - (90 + (90 - (360 / var(--items)))) );--angle: calc( var(--opposite) * 0.01745329251 );--sin-term1: var(--angle);--sin-term2: calc((var(--angle) * var(--angle) * var(--angle)) / 6);--sin-term3: calc((var(--angle) * var(--angle) * var(--angle) * var(--angle) * var(--angle)) / 120);--sin-term4: calc((var(--angle) * var(--angle) * var(--angle) * var(--angle) * var(--angle) * var(--angle) * var(--angle)) / 5040);--sin-term5: calc((var(--angle) * var(--angle) * var(--angle) * var(--angle) * var(--angle) * var(--angle) * var(--angle) * var(--angle) * var(--angle)) / 362880);--sin: calc(var(--sin-term1) - var(--sin-term2) + var(--sin-term3) - var(--sin-term4) + var(--sin-term5));--hypo: calc( 17.8125 / var(--sin) );--ratio: calc( var(--hypo) / 17.8125 );background:linear-gradient(to top left, #8a2be2 10%, #00008b 75%);-webkit-filter:drop-shadow(0 0 1rem indigo);filter:drop-shadow(0 0 1rem indigo);height:100%;position:absolute;width:100%}.charts-radar dd:nth-of-type(1){--index: 1}.charts-radar dd:nth-of-type(1) span{--pos: calc( 100% - (var(--2) * 100% / (var(--scale) * var(--ratio) ) ) );-webkit-clip-path:polygon(100% var(--pos), calc( 100% - ( var(--1) * 100% / var(--scale) )) 100%, 100% 100%);clip-path:polygon(100% var(--pos), calc( 100% - ( var(--1) * 100% / var(--scale) )) 100%, 100% 100%)}.charts-radar dd:nth-of-type(2){--index: 2}.charts-radar dd:nth-of-type(2) span{--pos: calc( 100% - (var(--3) * 100% / (var(--scale) * var(--ratio) ) ) );-webkit-clip-path:polygon(100% var(--pos), calc( 100% - ( var(--2) * 100% / var(--scale) )) 100%, 100% 100%);clip-path:polygon(100% var(--pos), calc( 100% - ( var(--2) * 100% / var(--scale) )) 100%, 100% 100%)}.charts-radar dd:nth-of-type(3){--index: 3}.charts-radar dd:nth-of-type(3) span{--pos: calc( 100% - (var(--4) * 100% / (var(--scale) * var(--ratio) ) ) );-webkit-clip-path:polygon(100% var(--pos), calc( 100% - ( var(--3) * 100% / var(--scale) )) 100%, 100% 100%);clip-path:polygon(100% var(--pos), calc( 100% - ( var(--3) * 100% / var(--scale) )) 100%, 100% 100%)}.charts-radar dd:nth-of-type(4){--index: 4}.charts-radar dd:nth-of-type(4) span{--pos: calc( 100% - (var(--5) * 100% / (var(--scale) * var(--ratio) ) ) );-webkit-clip-path:polygon(100% var(--pos), calc( 100% - ( var(--4) * 100% / var(--scale) )) 100%, 100% 100%);clip-path:polygon(100% var(--pos), calc( 100% - ( var(--4) * 100% / var(--scale) )) 100%, 100% 100%)}.charts-radar dd:nth-of-type(5){--index: 5}.charts-radar dd:nth-of-type(5) span{--pos: calc( 100% - (var(--6) * 100% / (var(--scale) * var(--ratio) ) ) );-webkit-clip-path:polygon(100% var(--pos), calc( 100% - ( var(--5) * 100% / var(--scale) )) 100%, 100% 100%);clip-path:polygon(100% var(--pos), calc( 100% - ( var(--5) * 100% / var(--scale) )) 100%, 100% 100%)}.charts-radar dd:nth-of-type(6){--index: 6}.charts-radar dd:nth-of-type(6) span{--pos: calc( 100% - (var(--7) * 100% / (var(--scale) * var(--ratio) ) ) );-webkit-clip-path:polygon(100% var(--pos), calc( 100% - ( var(--6) * 100% / var(--scale) )) 100%, 100% 100%);clip-path:polygon(100% var(--pos), calc( 100% - ( var(--6) * 100% / var(--scale) )) 100%, 100% 100%)}.charts-radar dd:nth-of-type(7){--index: 7}.charts-radar dd:nth-of-type(7) span{--pos: calc( 100% - (var(--8) * 100% / (var(--scale) * var(--ratio) ) ) );-webkit-clip-path:polygon(100% var(--pos), calc( 100% - ( var(--7) * 100% / var(--scale) )) 100%, 100% 100%);clip-path:polygon(100% var(--pos), calc( 100% - ( var(--7) * 100% / var(--scale) )) 100%, 100% 100%)}.charts-radar dd::after,.charts-radar dd::before{display:none}}}.table-charts{background:#fff;border-collapse:separate;border-spacing:0;caption-side:bottom;empty-cells:hide;margin:1.5em auto;overflow:hidden;padding:1em}.table-charts>caption:first-child{background:inherit;font-style:normal;padding:1rem 0}.table-charts th,.table-charts td{border:0;padding:0}.table-charts th:empty,.table-charts td:empty{display:none}@supports (grid-template-columns: repeat(var(--scale, 100), minmax(0, 1fr))){.table-charts.bar tr{display:grid;grid-auto-rows:1fr;grid-row-gap:.5rem;grid-template-columns:minmax(-webkit-min-content, 12.5em) repeat(var(--scale, 100), minmax(0, 1fr)) 10ch;grid-template-columns:minmax(min-content, 12.5em) repeat(var(--scale, 100), minmax(0, 1fr)) 10ch;transition:opacity 0.2s cubic-bezier(0.5, 0, 0.5, 1)}.table-charts.bar tr th{grid-column:1 / 1;margin:.5rem 0 0;padding:0 1rem 0 0;text-align:right}.table-charts.bar tr td{--size: calc(var(--scale, 100) * 100%);--position: calc(var(--value, 0) / var(--scale, 100) * 100%);background-image:linear-gradient(to right, #3cb371, #444, #0000cd, #639, crimson);background-position:var(--position) 0%;background-size:var(--size) 100%;grid-column:2/var(--value, 0);margin:.5rem 0 0;position:relative}.table-charts.bar tr td span{background:inherit;-webkit-text-fill-color:transparent;-webkit-background-clip:text;font-weight:bold;left:100%;position:absolute}.table-charts.bar:hover tr{opacity:.75}.table-charts.bar:hover tr:hover{opacity:1}@media screen and (min-width: 30em){.table-charts.bar caption{text-align:initial;text-indent:12.5rem}}@media screen and (-ms-high-contrast: active){.table-charts.bar td{background-image:linear-gradient(to right, Window, ButtonFace, ButtonShadow, ButtonText, highlight)}}.table-charts.bar.waterfall tr:nth-of-type(1) td{grid-column:var(--0, 0)/var(--value, 0)}.table-charts.bar.waterfall tr:nth-of-type(2) td{grid-column:var(--1, 0)/var(--value, 0)}.table-charts.bar.waterfall tr:nth-of-type(3) td{grid-column:var(--2, 0)/var(--value, 0)}.table-charts.bar.waterfall tr:nth-of-type(4) td{grid-column:var(--3, 0)/var(--value, 0)}.table-charts.bar.waterfall tr:nth-of-type(5) td{grid-column:var(--4, 0)/var(--value, 0)}.table-charts.bar.waterfall tr:nth-of-type(6) td{grid-column:var(--5, 0)/var(--value, 0)}.table-charts.bar.waterfall tr:nth-of-type(7) td{grid-column:var(--6, 0)/var(--value, 0)}.table-charts.bar.waterfall tr:nth-of-type(8) td{grid-column:var(--7, 0)/var(--value, 0)}.table-charts.bar.waterfall tr:nth-of-type(9) td{grid-column:var(--8, 0)/var(--value, 0)}.table-charts.bar.waterfall tr:nth-of-type(10) td{grid-column:var(--9, 0)/var(--value, 0)}.table-charts.bar.waterfall tr:nth-of-type(11) td{grid-column:var(--10, 0)/var(--value, 0)}}@supports ((-webkit-clip-path: polygon(0% calc(100% - (var(--1) * 100% / var(--y))))) or (clip-path: polygon(0% calc(100% - (var(--1) * 100% / var(--y)))))){@media screen and (min-width: 30em){.table-charts.line{--offset: calc((100% / var(--x)) / 2);padding:calc(32em - 2rem) 0 1rem;position:relative;transition:background 0.3s cubic-bezier(0.5, 0, 0.5, 1),color 0.3s cubic-bezier(0.5, 0, 0.5, 1)}.table-charts.line::after,.table-charts.line::before{bottom:8rem;content:"";position:absolute;top:0;width:100%}.table-charts.line::before{background:linear-gradient(to top, #00bfff, crimson 75%);-webkit-clip-path:polygon(0% calc(100% - (var(--1) / var(--y) * 100%)), var(--offset) calc(100% - (var(--1) / var(--y) * 100%)), calc((100% / var(--x) * 1) + var(--offset)) calc(100% - (var(--2) / var(--y) * 100%)), calc((100% / var(--x) * 2) + var(--offset)) calc(100% - (var(--3) / var(--y) * 100%)), calc((100% / var(--x) * 3) + var(--offset)) calc(100% - (var(--4) / var(--y) * 100%)), calc((100% / var(--x) * 4) + var(--offset)) calc(100% - (var(--5) / var(--y) * 100%)), calc((100% / var(--x) * 5) + var(--offset)) calc(100% - (var(--6) / var(--y) * 100%)), calc((100% / var(--x) * 6) + var(--offset)) calc(100% - (var(--7) / var(--y) * 100%)), calc((100% / var(--x) * 7) + var(--offset)) calc(100% - (var(--8) / var(--y) * 100%)), calc((100% / var(--x) * 8) + var(--offset)) calc(100% - (var(--9) / var(--y) * 100%)), calc((100% / var(--x) * 9) + var(--offset)) calc(100% - (var(--10) / var(--y) * 100%)), calc((100% / var(--x) * 10) + var(--offset)) calc(100% - (var(--11) / var(--y) * 100%)), calc((100% / var(--x) * 11) + var(--offset)) calc(100% - (var(--12) / var(--y) * 100%)), 100% calc(100% - (var(--12) / var(--y) * 100%)), 100% 100%, 0% 100%);clip-path:polygon(0% calc(100% - (var(--1) / var(--y) * 100%)), var(--offset) calc(100% - (var(--1) / var(--y) * 100%)), calc((100% / var(--x) * 1) + var(--offset)) calc(100% - (var(--2) / var(--y) * 100%)), calc((100% / var(--x) * 2) + var(--offset)) calc(100% - (var(--3) / var(--y) * 100%)), calc((100% / var(--x) * 3) + var(--offset)) calc(100% - (var(--4) / var(--y) * 100%)), calc((100% / var(--x) * 4) + var(--offset)) calc(100% - (var(--5) / var(--y) * 100%)), calc((100% / var(--x) * 5) + var(--offset)) calc(100% - (var(--6) / var(--y) * 100%)), calc((100% / var(--x) * 6) + var(--offset)) calc(100% - (var(--7) / var(--y) * 100%)), calc((100% / var(--x) * 7) + var(--offset)) calc(100% - (var(--8) / var(--y) * 100%)), calc((100% / var(--x) * 8) + var(--offset)) calc(100% - (var(--9) / var(--y) * 100%)), calc((100% / var(--x) * 9) + var(--offset)) calc(100% - (var(--10) / var(--y) * 100%)), calc((100% / var(--x) * 10) + var(--offset)) calc(100% - (var(--11) / var(--y) * 100%)), calc((100% / var(--x) * 11) + var(--offset)) calc(100% - (var(--12) / var(--y) * 100%)), 100% calc(100% - (var(--12) / var(--y) * 100%)), 100% 100%, 0% 100%);z-index:2}.table-charts.line::after{--scale: calc(100% / var(--y));background:repeating-linear-gradient(to bottom, white, white var(--scale), rgba(0,0,0,0.25) calc(var(--scale) + .125rem));z-index:1}.table-charts.line th,.table-charts.line td{font-weight:bold;text-align:center;width:calc( 100% / var(--x));width:8.3%}.table-charts.line th:hover,.table-charts.line td:hover{background:#f5f5f5;color:#0000cd}.table-charts.line th::after,.table-charts.line td::after{background:#fff;bottom:8rem;content:"";height:calc(100% - 4rem);mix-blend-mode:soft-light;opacity:0;position:absolute;transition:opacity 0.3s cubic-bezier(0.5, 0, 0.5, 1);width:inherit;z-index:3}.table-charts.line th:nth-child(2)::after,.table-charts.line td:nth-child(2)::after{left:calc(100% / var(--x) * 0)}.table-charts.line th:nth-child(3)::after,.table-charts.line td:nth-child(3)::after{left:calc(100% / var(--x) * 1)}.table-charts.line th:nth-child(4)::after,.table-charts.line td:nth-child(4)::after{left:calc(100% / var(--x) * 2)}.table-charts.line th:nth-child(5)::after,.table-charts.line td:nth-child(5)::after{left:calc(100% / var(--x) * 3)}.table-charts.line th:nth-child(6)::after,.table-charts.line td:nth-child(6)::after{left:calc(100% / var(--x) * 4)}.table-charts.line th:nth-child(7)::after,.table-charts.line td:nth-child(7)::after{left:calc(100% / var(--x) * 5)}.table-charts.line th:nth-child(8)::after,.table-charts.line td:nth-child(8)::after{left:calc(100% / var(--x) * 6)}.table-charts.line th:nth-child(9)::after,.table-charts.line td:nth-child(9)::after{left:calc(100% / var(--x) * 7)}.table-charts.line th:nth-child(10)::after,.table-charts.line td:nth-child(10)::after{left:calc(100% / var(--x) * 8)}.table-charts.line th:nth-child(11)::after,.table-charts.line td:nth-child(11)::after{left:calc(100% / var(--x) * 9)}.table-charts.line th:nth-child(12)::after,.table-charts.line td:nth-child(12)::after{left:calc(100% / var(--x) * 10)}.table-charts.line th:nth-child(13)::after,.table-charts.line td:nth-child(13)::after{left:calc(100% / var(--x) * 11)}.table-charts.line th:hover::after,.table-charts.line td:hover::after{opacity:.5}.table-charts.line th{color:#000}.table-charts.line td{line-height:1.5}.table-charts.line td abbr[title]{font-weight:normal}}}.fly-out,.fly-out ul{display:flex;flex-wrap:wrap;justify-content:space-between;list-style:none;margin:0;padding:0}.fly-out a,.fly-out button{background:#fff;border:0;border-radius:0;color:#0000cd;display:block;margin:0;padding:.5rem 1rem;text-decoration:none;white-space:nowrap}.fly-out a:hover,.fly-out a:focus,.fly-out a:active,.fly-out button:hover,.fly-out button:focus,.fly-out button:active{background:#f5f5f5;border:0;color:#00008b}.fly-out>*{background:#fff;margin:.5rem;position:relative;z-index:1}.fly-out>*:hover,.fly-out>*.focus-within{z-index:2}.fly-out>*>a:hover,.fly-out>*>a:focus,.fly-out>*>a:active,.fly-out>*>button:hover,.fly-out>*>button:focus,.fly-out>*>button:active{background:none}.fly-out>*>button{padding-right:1rem}.fly-out>*>button::after{content:"↓";display:inline-block;padding-left:.5rem;transition:transform 0.3s cubic-bezier(0, 0.5, 0.5, 1) 0.5s;will-change:transform}.fly-out ul{align-items:flex-start;background:inherit;clip:rect(0, 2rem, 2rem, 0);flex-direction:column;font-size:inherit;min-width:100%;padding-top:2.5em;pointer-events:none;position:absolute;top:0;transition:clip 0.3s cubic-bezier(0, 0.5, 0.5, 1) 0.5s;will-change:clip;z-index:-1}.fly-out ul li{min-width:inherit}.fly-out ul a,.fly-out ul button{padding:.5rem 1rem;pointer-events:auto}.fly-out>*:hover>ul,.fly-out>*>button:hover+ul,.fly-out>*>button:focus+ul,.fly-out>*>button:active+ul,.fly-out>*.focus-within>ul{box-shadow:.25em .25em 0 0 rgba(105,105,105,0.2);clip:auto;outline:1px solid #a9a9a9;transition:clip 0.3s cubic-bezier(0.5, 0, 1, 0.5)}.fly-out>*>button:hover::after,.fly-out>*>button:focus::after,.fly-out>*>button:active::after,.fly-out>*:hover>button::after,.fly-out>*.focus-within>button::after{transform:rotateX(0.5turn);transition:transform 0.3s cubic-bezier(0.5, 0, 1, 0.5)}@supports ((-webkit-clip-path: circle(150% at top right)) or (clip-path: circle(150% at top right))){@media screen and (min-width: 30em){.fly-out,.fly-out ul{justify-content:initial}.fly-out>*:focus-within{z-index:2}.fly-out ul{clip:auto;-webkit-clip-path:circle(1.125em at left top);clip-path:circle(1.125em at left top);transition:-webkit-clip-path 0.3s cubic-bezier(0, 0.5, 0.5, 1) 0.5s;transition:clip-path 0.3s cubic-bezier(0, 0.5, 0.5, 1) 0.5s;transition:clip-path 0.3s cubic-bezier(0, 0.5, 0.5, 1) 0.5s, -webkit-clip-path 0.3s cubic-bezier(0, 0.5, 0.5, 1) 0.5s;will-change:clip-path}.fly-out>*:hover>ul,.fly-out>*>button:hover+ul,.fly-out>*>button:focus+ul,.fly-out>*>button:active+ul,.fly-out>*:focus-within>ul{box-shadow:.25em .25em 0 0 rgba(105,105,105,0.2);-webkit-clip-path:circle(150% at top right);clip-path:circle(150% at top right);outline:1px solid #a9a9a9;transition:-webkit-clip-path 0.3s cubic-bezier(0.5, 0, 1, 0.5);transition:clip-path 0.3s cubic-bezier(0.5, 0, 1, 0.5);transition:clip-path 0.3s cubic-bezier(0.5, 0, 1, 0.5), -webkit-clip-path 0.3s cubic-bezier(0.5, 0, 1, 0.5)}.fly-out>*:focus-within>button::after{transform:rotateX(0.5turn);transition:transform 0.3s cubic-bezier(0.5, 0, 1, 0.5)}}}.progress{-webkit-animation:progression 2s cubic-bezier(0.5, 0, 0.5, 1) infinite;animation:progression 2s cubic-bezier(0.5, 0, 0.5, 1) infinite;background-image:linear-gradient(to right, #8a2be2 20%, indigo 40%, #8a2be2 60%, indigo 80%, #8a2be2 100%);background-size:200% auto;display:inline-block;-webkit-text-fill-color:transparent;-webkit-background-clip:text;font-weight:bold}@-webkit-keyframes progression{to{background-position:200% center}}@keyframes progression{to{background-position:200% center}}@media screen and (-ms-high-contrast: active){.progress{color:windowText}}button[role="switch"]{background-color:rgba(0,0,205,0.1);border-radius:1.375rem !important;box-sizing:content-box;color:#444;height:2.75rem;line-height:2.75rem;padding:0 3rem;transition:all 0.3s cubic-bezier(0, 0.5, 0.5, 1);width:4.75rem;will-change:background-color}button[role="switch"]::before{background:#fff;border-radius:1.375rem;content:"";position:absolute;height:2.375rem;left:.25rem;top:.25rem;transform:none;transition:transform 0.3s cubic-bezier(0, 0.5, 0.5, 1) 0s;width:2.375rem;will-change:transform}button[role="switch"]:hover,button[role="switch"]:focus,button[role="switch"]:active{background-color:rgba(0,0,205,0.075);color:#000;top:0}button[role="switch"][aria-checked="true"]{background-color:rgba(152,251,152,0.3);color:#3cb371}button[role="switch"][aria-checked="true"]::before{background:currentColor;transform:translateX(7.875rem)}button[role="switch"]>*:first-child,button[role="switch"][aria-checked="true"]>*:last-child{display:none}button[role="switch"][aria-checked="true"]>*:first-child{display:block}@media screen and (-ms-high-contrast: active){button[role="switch"]{background-color:buttonFace;border:1px solid currentColor !important;color:buttonText}button[role="switch"]>span{background-color:inherit}button[role="switch"]::before{background:currentColor}@supports (--css: var(--iables)){button[role="switch"] button[role="switch"][aria-checked="true"]{background-color:highlight;color:highlightText}}}.deck{display:grid;grid-gap:1rem;grid-template-columns:repeat(auto-fill, minmax(11.25rem, 1fr));grid-auto-flow:dense}.deck [class*="card"]{border:1px solid;flex-flow:column nowrap;height:calc(11.25rem * 1.5);justify-content:space-between;outline:1px dotted;outline-offset:-1.75rem;padding:1rem;text-align:center;width:11.25rem;z-index:0}.deck [class*="card"] figure{width:100%}.deck [class*="card"] figcaption{margin:0 auto;max-width:calc(100% - 2.5rem);padding-bottom:0}.deck [class*="card"] figcaption p{-webkit-hyphens:none;-ms-hyphens:none;hyphens:none;line-height:1.2}.deck [class*="card"] [class*="--l"]{border:.25rem solid currentColor;box-sizing:content-box;height:2rem;justify-content:center;margin:0 auto 0 0;width:2rem;z-index:2}.deck [class*="card"]::after{content:"";display:flex;height:2.5rem;width:2.5rem}@supports (background: -moz-element(var(--card, 1))){.deck [class*="card"]::after{background:-moz-element(var(--card, 1)) no-repeat bottom right;margin-left:auto;position:relative;z-index:2}}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
