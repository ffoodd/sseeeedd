/*! normalize.css v7.0.0 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,footer,header,nav,section{display:block}h1{font-size:2em;margin:0.67em 0}figcaption,figure,main{display:block}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace, monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:inherit}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace, monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}button,html [type="button"],[type="reset"],[type="submit"]{-webkit-appearance:button}button::-moz-focus-inner,[type="button"]::-moz-focus-inner,[type="reset"]::-moz-focus-inner,[type="submit"]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type="button"]:-moz-focusring,[type="reset"]:-moz-focusring,[type="submit"]:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:0.35em 0.75em 0.625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}[type="checkbox"],[type="radio"]{box-sizing:border-box;padding:0}[type="number"]::-webkit-inner-spin-button,[type="number"]::-webkit-outer-spin-button{height:auto}[type="search"]{-webkit-appearance:textfield;outline-offset:-2px}[type="search"]::-webkit-search-cancel-button,[type="search"]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details,menu{display:block}summary{display:list-item}canvas{display:inline-block}template{display:none}[hidden]{display:none}button,input,optgroup,select,textarea{line-height:1.5}label,input[type="submit"],input[type="reset"],input[type="button"],button,.button{cursor:pointer}form [disabled],form [readonly]{cursor:not-allowed}label,.label,button,.button,input,select{vertical-align:middle}input,button,select,textarea{padding:.5em;border-radius:.25em;font-family:inherit;font-size:1em}form input[type="text"],form input[type="number"],form input[type="search"],form input[type="password"],form input[type="email"],form input[type="url"],form input[type="tel"],form input[type="date"],form input[type="time"],form input[type="datetime-local"],form input[type="month"],form input[type="week"],form input[type="color"],form input[type="file"],form textarea,form input[type="range"],form select,.form input[type="text"],.form input[type="number"],.form input[type="search"],.form input[type="password"],.form input[type="email"],.form input[type="url"],.form input[type="tel"],.form input[type="date"],.form input[type="time"],.form input[type="datetime-local"],.form input[type="month"],.form input[type="week"],.form input[type="color"],.form input[type="file"],.form textarea,.form input[type="range"],.form select,fieldset input[type="text"],fieldset input[type="number"],fieldset input[type="search"],fieldset input[type="password"],fieldset input[type="email"],fieldset input[type="url"],fieldset input[type="tel"],fieldset input[type="date"],fieldset input[type="time"],fieldset input[type="datetime-local"],fieldset input[type="month"],fieldset input[type="week"],fieldset input[type="color"],fieldset input[type="file"],fieldset textarea,fieldset input[type="range"],fieldset select,.fieldset input[type="text"],.fieldset input[type="number"],.fieldset input[type="search"],.fieldset input[type="password"],.fieldset input[type="email"],.fieldset input[type="url"],.fieldset input[type="tel"],.fieldset input[type="date"],.fieldset input[type="time"],.fieldset input[type="datetime-local"],.fieldset input[type="month"],.fieldset input[type="week"],.fieldset input[type="color"],.fieldset input[type="file"],.fieldset textarea,.fieldset input[type="range"],.fieldset select{width:100%}::-ms-clear{display:none}@media screen and (-webkit-min-device-pixel-ratio: 1.5){input[type="text"],input[type="number"],input[type="search"],input[type="password"],input[type="email"],input[type="url"],input[type="tel"],input[type="date"],input[type="time"],input[type="datetime-local"],input[type="month"],input[type="week"],input[type="color"],input[type="file"],textarea,select{font-size:1em}}fieldset,.fieldset{margin-bottom:1em;padding:0;border:none}@media screen and (min-width: 48.0625em){fieldset,.fieldset{margin-right:auto;margin-left:auto;max-width:37.5em}}fieldset>div,.fieldset>div{margin-bottom:1em}legend{margin-bottom:1em;font-weight:bold}::-webkit-input-placeholder{color:#a9a9a9}::-moz-placeholder{color:#a9a9a9;opacity:1}:-ms-input-placeholder{color:#a9a9a9}label,.label{display:block}input[type="checkbox"]+label,input[type="radio"]+label{display:inline-block}input[type="text"],input[type="number"],input[type="search"],input[type="password"],input[type="email"],input[type="url"],input[type="tel"],input[type="date"],input[type="time"],input[type="datetime-local"],input[type="month"],input[type="week"],input[type="color"],input[type="file"],textarea,select{border:1px solid rgba(0,0,0,0.2);background-color:#f5f5f5}input[type="text"]:focus,input[type="number"]:focus,input[type="search"]:focus,input[type="password"]:focus,input[type="email"]:focus,input[type="url"]:focus,input[type="tel"]:focus,input[type="date"]:focus,input[type="time"]:focus,input[type="datetime-local"]:focus,input[type="month"]:focus,input[type="week"]:focus,input[type="color"]:focus,input[type="file"]:focus,textarea:focus,select:focus{box-shadow:0 0 5px rgba(0,0,0,0.25);border:1px solid rgba(0,0,0,0.5)}input[type="checkbox"],input[type="radio"],input[type="image"]{width:auto;border:0;background-color:transparent}input[type="text"],input[type="number"],input[type="search"],input[type="password"],input[type="email"],input[type="url"],input[type="tel"],input[type="date"],input[type="time"],input[type="datetime-local"],input[type="month"],input[type="week"],input[type="color"],input[type="file"],textarea,input[type="submit"],input[type="reset"],input[type="button"],button,.button{-webkit-appearance:none;-moz-appearance:none}input[type="search"]{-webkit-appearance:textfield}input[type="color"]{padding:.1em 0;width:2.375em;height:2.25em}input[type="checkbox"]:focus,input[type="radio"]:focus{outline:1px dotted}.checkbox-group,.radio-group{margin-bottom:0}.checkbox-group legend,.radio-group legend{margin-bottom:0;font-weight:normal}.checkbox-group>div,.radio-group>div{margin-top:0}.toggle-field{position:relative;display:inline-block;width:2.5em;vertical-align:middle;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none}.toggle-field+.label{display:inline-block}.toggle-label{overflow:hidden;padding:0;height:1.5625em;line-height:1.5625em;border:2px solid transparent;border-radius:.25em;background-color:rgba(0,0,0,0.25);text-indent:100%;transition:all .3s ease-in}input[type="checkbox"]+.toggle-label,input[type="radio"]+.toggle-label{display:block}.toggle-label:before{content:"";position:absolute;top:0;bottom:0;display:block;margin:0;width:1.5em;right:1em;border:2px solid rgba(0,0,0,0.25);border-radius:.25em;background:#f5f5f5;transition:all .3s ease-in 0s}.toggle-input:checked+.toggle-label{background-color:#000;border-color:#000}.toggle-input:checked+.toggle-label:before{right:0;border-color:#000}select[multiple]{vertical-align:top}textarea{vertical-align:top;resize:vertical}input[type="submit"],input[type="reset"],input[type="button"],button,.button{margin:.5em 0;width:auto;border:1px solid #000;background-color:#000;color:#fff}input[type="submit"]:hover,input[type="submit"]:focus,input[type="reset"]:hover,input[type="reset"]:focus,input[type="button"]:hover,input[type="button"]:focus,button:hover,button:focus,.button:hover,.button:focus{border:1px solid rgba(0,0,0,0.75);background-color:rgba(0,0,0,0.75)}input[type="reset"]{border:1px solid #000;background-color:#f5f5f5;color:#000}input[type="reset"]:hover,input[type="reset"]:focus{border:1px solid rgba(0,0,0,0.75);background-color:#f5f5f5;color:rgba(0,0,0,0.75)}.button{display:inline-block;padding:.5em;border-radius:.25em;font-family:inherit;font-size:1em;text-decoration:none}.button:active,.button:visited,.button:hover,.button:focus{color:#fff}@media screen and (min-width: 48.0625em){.form-buttons{margin-right:auto;margin-left:auto;max-width:37.5em}}div[class*="form-msg"]{padding:0 1em;margin-bottom:1em;border-radius:.25em}div[class*="form-msg"] p:first-child{margin-top:1em}label [class^="label-msg"],.label [class^="label-msg"]{display:block;margin:-.25em 0 .25em 0;font-size:.9em}.form-msg-help{color:gray;background-color:#f3f3f3;border:1px solid gray}.label-msg-help{color:gray}.form-msg-error{color:#b22222;background-color:#f4c5c5;border:1px solid #b22222}.label-msg-error{color:#b22222}.form-error input,.form-error select,.form-error textarea{border:1px solid #b22222;box-shadow:0 0 5px 0 rgba(178,34,34,0.5)}.form-msg-confirmation{color:#00ff7f;background-color:#fff;border:1px solid #00ff7f}.form-valid input,.form-valid select,.form-valid textarea{border:1px solid #00ff7f;box-shadow:0 0 5px 0 rgba(0,255,127,0.5)}.token.comment,.token.prolog,.token.doctype,.token.cdata{color:gray}.token.punctuation{color:deepskyblue}.namespace{opacity:.7}.token.property,.token.tag,.token.boolean,.token.number,.token.constant,.token.symbol{color:#00ff7f}.token.selector,.token.attr-name,.token.string,.token.char,.token.builtin,.token.inserted{color:deepskyblue}.token.operator,.token.entity,.token.url,.language-css .token.string,.style .token.string,.token.variable{color:Orange}.token.atrule,.token.attr-value,.token.keyword{color:blueviolet}.token.regex,.token.important{color:crimson}.token.important,.token.bold{font-weight:bold}.token.italic{font-style:italic}.token.entity{cursor:help}.token.deleted{color:#b22222}html[lang]{box-sizing:border-box;overflow-y:scroll;overflow:-moz-scrollbars-vertical;position:relative}*,*::after,*::before{box-sizing:inherit}body{background:#f5f5f5;color:#444;counter-reset:footnotes;font:normal 400 1em/1.5 sans-serif;font-family:-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif;overflow-x:hidden;position:relative;-webkit-font-smoothing:subpixel-antialiased;text-rendering:optimizeSpeed}::-moz-selection{background-color:mediumblue;color:#f5f5f5;text-shadow:none}::selection{background-color:mediumblue;color:#f5f5f5;text-shadow:none}a{color:#639;-webkit-text-decoration-style:dotted;text-decoration-style:dotted;text-decoration-skip-ink:auto}a:hover,a:focus{color:indigo}a:active,a:visited{opacity:.75}a[target$="blank"]::after{content:url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='rebeccapurple' height='10' width='10' viewBox='0 0 100 100'%3E%3Cpath d='M91.875 62H85v23H15V15h23V0H0v100h100V62z'/%3E%3Cpath d='M54 0v.627l17.787 17.85L52.701 38H38v24h24V49.799l20.773-20.337L99.374 46H100V0z'/%3E%3C/svg%3E");padding-left:.25em}a:hover[target$="blank"]::after,a:focus[target$="blank"]::after{content:url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='indigo' height='10' width='10' viewBox='0 0 100 100'%3E%3Cpath d='M91.875 62H85v23H15V15h23V0H0v100h100V62z'/%3E%3Cpath d='M54 0v.627l17.787 17.85L52.701 38H38v24h24V49.799l20.773-20.337L99.374 46H100V0z'/%3E%3C/svg%3E")}address{font-size:1.375em;font-style:normal;padding:0 0 0 2em}code,pre,video,svg{max-width:100%}li p,li ul,li ol{margin-bottom:0;margin-top:0}[hidden],[role="alert"]:empty{display:none}main{margin:0 auto;outline:none}.no-margin{margin:0 !important}.no-padding{padding:0 !important}.no-border{border:0 !important}.no-background{background:none !important}.no-list{list-style:none !important;padding:0}[class*="--s"]{font-size:.875em;line-height:1.5}[class*="--l"]{font-size:1.25em;line-height:1.2}[class*="--xl"]{font-size:1.875em;line-height:1.6;margin:1.2em 0}.muted{color:gray !important}.muted em,.muted strong{color:#f5f5f5}.bg-alert{background-color:crimson;color:white}.bg-alert *{color:inherit}.bg-alert a:hover,.bg-alert a:focus{color:inherit;text-decoration:underline}.bg-success{background-color:#00ff7f;color:#444}.bg-success *{color:inherit}.bg-success a:hover,.bg-success a:focus{color:inherit;text-decoration:underline}.bg-accent{background-color:#639;color:white}.bg-accent *{color:inherit}.bg-accent a:hover,.bg-accent a:focus{color:inherit;text-decoration:underline}.bg-dominant{background-color:#444;color:#fff}.bg-dominant *{color:inherit}.bg-dominant a:hover,.bg-dominant a:focus{color:inherit;text-decoration:underline}.bg-secondary{background-color:mediumblue;color:white}.bg-secondary *{color:inherit}.bg-secondary a:hover,.bg-secondary a:focus{color:inherit;text-decoration:underline}.sr-only,.visually-hidden,.toggle-input{border:0 !important;clip:rect(1px, 1px, 1px, 1px) !important;-webkit-clip-path:inset(50%) !important;clip-path:inset(50%) !important;height:1px !important;overflow:hidden !important;padding:0 !important;position:absolute !important;width:1px !important;white-space:nowrap !important}.sr-only-focusable:focus,.sr-only-focusable:active{clip:auto !important;-webkit-clip-path:none !important;clip-path:none !important;height:auto !important;overflow:visible !important;width:auto !important;white-space:normal !important}p,ul,ol,dl,pre,td,th,caption{font-size:1em;line-height:1.5;margin:1.5em 0}.hn,h1,.h1,h2,.h2,h3,.h3,h4,.h4,h5,.h5,h6,th,.h6,blockquote footer,b,dt,strong,cite{color:#000;font-weight:700;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-rendering:optimizelegibility}.hn:first-child,h1:first-child,.h1:first-child,h2:first-child,.h2:first-child,h3:first-child,.h3:first-child,h4:first-child,.h4:first-child,h5:first-child,.h5:first-child,h6:first-child,th:first-child,.h6:first-child,blockquote footer:first-child,b:first-child,dt:first-child,strong:first-child,cite:first-child{margin-top:0}h1,.h1{color:mediumblue;font-size:2.875em;line-height:1.0434;margin:1.04348em 0 .52174em}h1 strong,.h1 strong{color:#444}h2,.h2{color:#639;font-size:2.5em;line-height:1.2;margin:1.2em 0 .6em}h3,.h3{color:#444;font-size:2.25em;line-height:1.3334;margin:1.33333em 0 .66667em}h4,.h4{font-size:1.875em;line-height:1.6;margin:1.6em 0 .8em}h5,.h5{font-size:1.625em;line-height:1.8462;margin:1.84615em 0 .92308em}h6,th,.h6{font-size:1.375em;line-height:1.0909;margin:2.18182em 0 1.09091em}textarea,table,td,th,div,p{word-wrap:break-word;-webkit-hyphens:auto;-ms-hyphens:auto;hyphens:auto}blockquote{font-size:1em;font-style:italic;line-height:1.5;margin:3em 0 1.5em;max-width:100%;padding-left:7em;position:relative;quotes:"«\00A0" "\00A0»";z-index:2}blockquote::before{color:#a9a9a9;content:open-quote;font-size:10em;font-weight:700;left:0;line-height:0;opacity:.25;position:absolute;top:0;z-index:-1}blockquote footer{font-style:normal}abbr[title]{border-bottom:1px dotted;cursor:help;text-decoration:none;text-transform:uppercase}small,.small{font-size:.875em}cite{color:#639;font-style:normal}hr{border-bottom:1px solid white;border-top:1px solid rgba(169,169,169,0.5);height:0}code{font:inherit;line-height:1}pre{background:#444;border:0;border-radius:.25em;color:#fff;direction:ltr;font-family:"Fira Mono", "Consolas", "Monaco", "Andale Mono", monospace;font-size:small;line-height:1.5;-webkit-hyphens:none;-ms-hyphens:none;hyphens:none;-moz-tab-size:4;-o-tab-size:4;tab-size:4;overflow-x:auto;padding:2em 1em .5em;text-align:left;white-space:pre;word-break:normal;word-spacing:normal;word-wrap:normal}pre::before{background:crimson;border-radius:50%;box-shadow:1.5em 0 0 0 Orange,3em 0 0 0 #00ff7f;content:"";display:block;height:1rem;-webkit-transform:translateY(-1rem);transform:translateY(-1rem);width:1rem}p code,ul code,ol code{border:1px solid;border-radius:.2em;color:mediumblue;display:inline-block;font-family:inherit;padding:.1em;white-space:nowrap}img[alt]{display:inline-block;max-width:100%;position:relative;vertical-align:middle}img[alt]:not([src$=".svg"]){min-height:4em;height:auto}img[alt]::after{background:white;bottom:0;content:attr(alt) "\a" "— " attr(src);left:0;padding:.5em;position:absolute;top:0;width:100%;white-space:pre-wrap}svg{fill:currentColor}figure[role="group"]{background:white;margin:1.5em auto;padding:1em}figure[role="group"] figcaption{display:block;font-size:.875em;padding:1em 0}table{border-collapse:collapse;caption-side:top;display:inline-block;margin-bottom:1.5em;max-width:100%;overflow-x:auto;vertical-align:top;white-space:nowrap}table>caption:first-child{font-style:italic;margin:0;padding:2.5em 1em}th,td{padding:.5em .75em;text-align:left}thead th,tbody th,thead td,tbody td{border-bottom:1px solid #f5f5f5}td{line-height:1.25;max-width:100%}tbody{border:1px solid #f5f5f5}tbody tr>*+*{border-left:1px solid #f5f5f5}@media only screen and (max-width: 48em){table{background:radial-gradient(ellipse at left, rgba(0,0,0,0.2) 0%, transparent 75%) 0 center,radial-gradient(ellipse at right, rgba(0,0,0,0.2) 0%, transparent 75%) 100% center;background-attachment:scroll, scroll;background-color:#fff;background-repeat:no-repeat;background-size:.625em 100%,.625em 100%;border:1px solid #f5f5f5;max-width:100% !important;-webkit-overflow-scrolling:touch}table>caption:first-child{background-image:linear-gradient(to left, #fff 50%, rgba(255,255,255,0) 100%),linear-gradient(to right, #fff 50%, rgba(255,255,255,0) 100%);background-repeat:no-repeat;background-position:100% 0, 0 0;background-size:1.25em 100%,1.25em 100%;border-bottom:1px solid #f5f5f5}td:first-child,th:first-child{background-image:linear-gradient(to right, #fff 50%, rgba(255,255,255,0) 100%);background-repeat:no-repeat;background-size:1.25em 100%}td:last-child,th:last-child{background-image:linear-gradient(to left, #fff 50%, rgba(255,255,255,0) 100%);background-repeat:no-repeat;background-position:100% 0;background-size:1.25em 100%}}@media only screen and (min-width: 48em){table{caption-side:bottom;display:table;table-layout:fixed;width:100%}th,td{padding:0.75em 1.375em}tbody th,tbody td{background:rgba(255,255,255,0.5)}tbody tr:nth-child(odd){background:#f5f5f5}}button[type]{background-color:#639;border:1px solid #639;border-radius:.25em;color:#fff;font-family:inherit;font-size:1em;line-height:1.5;margin:.5em 0;padding:.5em;vertical-align:middle;transition:all 300ms;width:auto;-webkit-appearance:none;-moz-appearance:none}button[type]:hover,button[type]:focus,button[type]:active,button[type][aria-expanded="true"]{border:1px solid rgba(102,51,153,0.75);background-color:rgba(102,51,153,0.75)}button[type]:active,button[type][aria-expanded="true"]{box-shadow:inset 0 2px rgba(255,255,255,0.2),0 0.125em 0 -0.1em rgba(0,0,0,0.15);top:.125em}button[type][disabled],button[type][disabled]:hover,button[type][disabled]:focus,button[type][disabled]:active{background-color:dimgray;color:#f5f5f5;cursor:not-allowed}details{border:.25em solid #000;padding:1rem}details+details{border-top-width:0}details[open] summary ~ *{-webkit-animation:slide-down .5s ease-in-out;animation:slide-down .5s ease-in-out}details summary{background:#444;color:#fff;cursor:pointer;margin:-1rem;padding:inherit;transition:background .2s ease-in-out}details summary:hover,details summary:focus{background:#000}@-webkit-keyframes slide-down{0%,50%{opacity:0;-webkit-transform:translateY(1.5em);transform:translateY(1.5em)}}@keyframes slide-down{0%,50%{opacity:0;-webkit-transform:translateY(1.5em);transform:translateY(1.5em)}}@media screen and (min-width: 30em){@supports (--foo: bar,baz){.vertical{display:-webkit-box;display:flex}.vertical details{-webkit-box-flex:0;flex:0;min-width:3.5em;overflow:hidden}.vertical details[open]{-webkit-box-flex:1;flex:1}.vertical details[open] summary ~ *{-webkit-animation:slide-in .5s ease-in-out;animation:slide-in .5s ease-in-out}.vertical details+details{border-width:.25em .25em .25em 0}.vertical details summary{float:left;min-height:20em;-webkit-writing-mode:vertical-lr;-ms-writing-mode:tb-lr;writing-mode:vertical-lr;-webkit-writing-mode:sideways-lr;-ms-writing-mode:sideways-lr;writing-mode:sideways-lr}.vertical details summary ~ *{padding-left:3.5em}.vertical details summary ~ *>*:first-child{margin-top:0}}}@-webkit-keyframes slide-in{0%,50%{opacity:0;-webkit-transform:translateX(-1.5em);transform:translateX(-1.5em)}}@keyframes slide-in{0%,50%{opacity:0;-webkit-transform:translateX(-1.5em);transform:translateX(-1.5em)}}[class*="grid"]>*,[class*="columns"]>*{display:block;margin-bottom:1rem}@media screen and (min-width: 30em){[class*="grid"],[class*="columns"]{-webkit-column-gap:1rem;column-gap:1rem}[class*="grid"]>*,[class*="columns"]>*{-webkit-column-break-inside:avoid;break-inside:avoid}.grid-2,.columns-2{-webkit-columns:2;columns:2}.grid-3,.columns-3{-webkit-columns:3;columns:3}.grid-4,.columns-4{-webkit-columns:4;columns:4}@supports (display: grid){[class*="grid"]{display:grid;grid-gap:1rem}[class*="grid"]>*{margin:0}.grid-2{grid-template-columns:repeat(2, [col] 1fr)}.grid-3{grid-template-columns:repeat(3, [col] 1fr)}.grid-4{grid-template-columns:repeat(4, [col] 1fr)}.grid-1-2{grid-template-columns:1fr 2fr}.grid-1-3{grid-template-columns:1fr 3fr}}}form>*+*{margin-top:2em}[type="radio"]:not(:first-of-type),[type="checkbox"]:not(:first-of-type){margin-left:.5em}body>*{background:rgba(245,245,245,0.75);margin:0 auto;max-width:64em;padding:1rem}nav ul{-webkit-box-align:center;align-items:center;display:-webkit-box;display:flex;list-style:none;margin:0;padding:0}nav a{padding:.5em 1em}nav>ul>li+li{margin-left:1rem}[id="pagination"] li:first-child a::before{content:"← ";speak:none}[id="pagination"] li:last-child a::after{content:" →";speak:none}[id="pagination"] a{text-decoration:none}[id="pagination"] a:hover,[id="pagination"] a:focus{background:white}[id="pagination"] [tabindex="-1"]{color:gray;pointer-events:none}[id="pagination"] [aria-current]{background:#639;color:white;pointer-events:none}[id="breadcrumb"] li[aria-current]{padding-left:1rem}[id="breadcrumb"] li:not(:last-child)::after{content:"→";speak:none}.note{background:white;border-left:1rem solid;color:dimgray;margin:1rem 0;padding:.5rem 1rem .25rem}.note *{color:inherit}a[id^="footnote-"][aria-describedby]{counter-increment:footnotes}a[id^="footnote-"][aria-describedby]::after{content:"[" counter(footnotes) "]";vertical-align:super;font-size:.875em;font-weight:400;margin-left:2px;color:#639;cursor:pointer}footer[id="footnotes"]{max-width:75ch}@-webkit-keyframes footnotes{from{color:#00ff7f}to{color:#444}}@keyframes footnotes{from{color:#00ff7f}to{color:#444}}[role="note"]:target{-webkit-animation:footnotes 1600ms ease-in;animation:footnotes 1600ms ease-in}.tooltip{display:inline-block;position:relative}.tooltip button{margin:0}[role="tooltip"]{background:#444;bottom:calc(100% + .5em);color:#f5f5f5;left:50%;opacity:0;margin:0;padding:.25em .5em .3125em;pointer-events:none;position:absolute;-webkit-transform-origin:50% calc(100% + 10px);transform-origin:50% calc(100% + 10px);-webkit-transform:perspective(1000px) rotate3d(1, 0, 0, 45deg) translateX(-50%);transform:perspective(1000px) rotate3d(1, 0, 0, 45deg) translateX(-50%);transition:opacity .2s ease-in, visibility 0s linear .2s, -webkit-transform .2s ease-in;transition:opacity .2s ease-in, transform .2s ease-in, visibility 0s linear .2s;transition:opacity .2s ease-in, transform .2s ease-in, visibility 0s linear .2s, -webkit-transform .2s ease-in;visibility:hidden;white-space:nowrap}[role="tooltip"]::after{border-left:.25em solid transparent;border-right:.25em solid transparent;border-top:.25em solid #444;bottom:-.25em;content:"";left:calc(50% - .25em);position:absolute}.tooltip button:hover+[role="tooltip"],.tooltip button:focus+[role="tooltip"]{opacity:1;pointer-events:auto;-webkit-transform:perspective(1000px) rotate3d(1, 0, 0, 0deg) translateX(-50%);transform:perspective(1000px) rotate3d(1, 0, 0, 0deg) translateX(-50%);transition:opacity .2s ease-out, -webkit-transform .2s ease-out;transition:opacity .2s ease-out, transform .2s ease-out;transition:opacity .2s ease-out, transform .2s ease-out, -webkit-transform .2s ease-out;visibility:visible}[role="alert"]{font-weight:bold;margin:1rem .5rem;padding:0 1rem}.bg-alert[role="alert"]{border:1px solid #b22222;box-shadow:.25em .25em 0 0 #b22222}.bg-success[role="alert"]{border:1px solid mediumseagreen;box-shadow:.25em .25em 0 0 mediumseagreen}.bg-accent[role="alert"]{border:1px solid indigo;box-shadow:.25em .25em 0 0 indigo}.bg-dominant[role="alert"]{border:1px solid #000;box-shadow:.25em .25em 0 0 #000}.bg-secondary[role="alert"]{border:1px solid DarkBlue;box-shadow:.25em .25em 0 0 DarkBlue}[class*="card"]{background:white;border:1px solid #a9a9a9;border-radius:.25em;color:dimgray;display:block;overflow:hidden}[class*="card"]>img{border-radius:.1875em .1875em 0 0}[class*="card"]>*:not(img){margin:0 0 1rem;padding:0 1rem}[class*="card"]>h3{color:inherit;display:inline-block;font-size:1.625em;line-height:1.2;margin:1rem 0}.card-alert{background:crimson;border-color:#b22222;color:white}.card-success{background:#00ff7f;border-color:mediumseagreen;color:#444}.card-accent{background:#639;border-color:indigo;color:white}.card-dominant{background:#444;border-color:#000;color:#fff}.card-secondary{background:mediumblue;border-color:DarkBlue;color:white}[class*="charts"] dd{margin:0}[class*="charts"] dd span{font-weight:bold}[class*="charts"] dd abbr[title]{border-bottom:0;font-size:small;font-weight:normal;text-transform:none}.charts-bar dt{color:dimgray;float:left;padding:0 1rem 0 0}@supports (grid-template-columns: repeat(var(--scale, 100), minmax(0, 1fr))){.charts-bar{display:grid;grid-auto-rows:1fr;grid-row-gap:.5rem;grid-template-columns:minmax(-webkit-min-content, 12.5em) repeat(var(--scale, 100), minmax(0, 1fr)) 6ch;grid-template-columns:minmax(min-content, 12.5em) repeat(var(--scale, 100), minmax(0, 1fr)) 6ch}.charts-bar dt{grid-column:1 / 1}.charts-bar dd{--size:calc(var(--scale, 100) * 100%);--position:calc(var(--value, 0) / var(--scale, 100) * 100%);background-image:linear-gradient(to right, mediumseagreen, #444, mediumblue, #639, crimson);background-position:var(--position) 0%;background-size:var(--size) 100%;grid-column:2/var(--value, 0);position:relative}.charts-bar dd span{background:inherit;-webkit-text-fill-color:transparent;-webkit-background-clip:text;left:100%;position:absolute}@media screen and (min-width: 30em){.charts-bar+figcaption{text-indent:12.5rem}.charts-bar dt{text-align:right}}}.charts-pie{-webkit-box-align:end;align-items:flex-end;background-color:inherit;display:-webkit-box;display:flex;flex-wrap:wrap;-webkit-box-pack:center;justify-content:center;margin:0 auto;position:relative}.charts-pie dt{color:var(--color, currentColor);position:relative;z-index:2}.charts-pie dt::before{background:currentColor;content:"";display:inline-block;height:1rem;-webkit-transform:translate3d(-0.2rem, 0.1rem, 0);transform:translate3d(-0.2rem, 0.1rem, 0);width:1rem}.charts-pie dt+dd{color:var(--color, currentColor);padding:0 1rem 0 .25rem;position:relative;z-index:2}.charts-pie dd[role="presentation"]{display:none}@supports (--position: calc(var(--start, 0) * .01turn)){@media screen and (min-width: 30em){.charts-pie{padding-top:calc(32em - 2rem)}.charts-pie::after{content:"";background:inherit;-webkit-clip-path:circle(var(--offset, 5rem));clip-path:circle(var(--offset, 5rem));height:calc(32em - 2rem);left:50%;margin:auto;position:absolute;top:50%;-webkit-transform:translate3d(-50%, -50%, 0);transform:translate3d(-50%, -50%, 0);width:calc(32em - 2rem)}.charts-pie+figcaption{text-align:center}.charts-pie dt+dd::before{content:" (";speak:none}.charts-pie dt+dd::after{content:")";speak:none}.charts-pie dd[role="presentation"]{--position:calc(var(--start, 0) * .01turn);-webkit-clip-path:circle(50% at 0% 50%);clip-path:circle(50% at 0% 50%);display:block;height:100%;left:50%;overflow:hidden;position:absolute;top:0;-webkit-transform:rotate(var(--position));transform:rotate(var(--position));-webkit-transform-origin:left center;transform-origin:left center;transition:-webkit-transform .2s ease-in-out;transition:transform .2s ease-in-out;transition:transform .2s ease-in-out, -webkit-transform .2s ease-in-out;width:calc(16em - 2rem)}.charts-pie dd[role="presentation"]::before{--position:calc(var(--value, 0) * .01turn + 1deg);background:var(--color, currentColor);content:"";height:inherit;left:-100%;position:inherit;top:0;-webkit-transform:rotate(var(--position));transform:rotate(var(--position));-webkit-transform-origin:right center;transform-origin:right center;width:100%}.charts-pie dd:hover+dd[role="presentation"],.charts-pie dt:hover+dd+dd[role="presentation"]{-webkit-transform:rotate(var(--position)) scale(1.05);transform:rotate(var(--position)) scale(1.05)}.charts-pie dt:nth-of-type(1)::before,.charts-pie dt:nth-of-type(1)+*+dd[role="presentation"]::before{background-image:url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='8' height='8' viewBox='0 0 8 8'%3E%3Cg fill='%23000000'%3E%3Cpath fill-rule='evenodd' d='M0 0h4v4H0V0zm4 4h4v4H4V4z'/%3E%3C/g%3E%3C/svg%3E");background-blend-mode:soft-light}.charts-pie dt:nth-of-type(2)::before,.charts-pie dt:nth-of-type(2)+*+dd[role="presentation"]::before{background-image:url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='12' height='24' viewBox='0 0 36 72'%3E%3Cg fill-rule='evenodd'%3E%3Cg fill='%23000000'%3E%3Cpath d='M2 6h12L8 18 2 6zm18 36h12l-6 12-6-12z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");background-blend-mode:soft-light}.charts-pie dt:nth-of-type(3)::before,.charts-pie dt:nth-of-type(3)+*+dd[role="presentation"]::before{background-image:url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='14' height='24' viewBox='0 0 28 49'%3E%3Cg fill-rule='evenodd'%3E%3Cg id='hexagons' fill='%23000000' fill-rule='nonzero'%3E%3Cpath d='M13.99 9.25l13 7.5v15l-13 7.5L1 31.75v-15l12.99-7.5zM3 17.9v12.7l10.99 6.34 11-6.35V17.9l-11-6.34L3 17.9zM0 15l12.98-7.5V0h-2v6.35L0 12.69v2.3zm0 18.5L12.98 41v8h-2v-6.85L0 35.81v-2.3zM15 0v7.5L27.99 15H28v-2.31h-.01L17 6.35V0h-2zm0 49v-8l12.99-7.5H28v2.31h-.01L17 42.15V49h-2z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");background-blend-mode:soft-light}.charts-pie dt:nth-of-type(4)::before,.charts-pie dt:nth-of-type(4)+*+dd[role="presentation"]::before{background-image:url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='20' height='12' viewBox='0 0 20 12'%3E%3Cg fill-rule='evenodd'%3E%3Cg id='charlie-brown' fill='%23000000'%3E%3Cpath d='M9.8 12L0 2.2V.8l10 10 10-10v1.4L10.2 12h-.4zm-4 0L0 6.2V4.8L7.2 12H5.8zm8.4 0L20 6.2V4.8L12.8 12h1.4zM9.8 0l.2.2.2-.2h-.4zm-4 0L10 4.2 14.2 0h-1.4L10 2.8 7.2 0H5.8z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");background-blend-mode:soft-light}.charts-pie dt:nth-of-type(5)::before,.charts-pie dt:nth-of-type(5)+*+dd[role="presentation"]::before{background-image:url("data:image/svg+xml,%3Csvg width='6' height='6' viewBox='0 0 6 6' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%23000000' fill-rule='evenodd'%3E%3Cpath d='M5 0h1L0 6V5zM6 5v1H5z'/%3E%3C/g%3E%3C/svg%3E");background-blend-mode:soft-light}.charts-pie dt:nth-of-type(6)::before,.charts-pie dt:nth-of-type(6)+*+dd[role="presentation"]::before{background-image:url("data:image/svg+xml,%3Csvg width='10' height='10' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%23000000' fill-rule='evenodd'%3E%3Ccircle cx='3' cy='3' r='3'/%3E%3Ccircle cx='13' cy='13' r='3'/%3E%3C/g%3E%3C/svg%3E");background-blend-mode:soft-light}.charts-pie.no-donut::after{display:none}.charts-pie.polar dd[role="presentation"]{--scale:calc(var(--value) / 50);-webkit-transform:rotate(var(--position)) scale(var(--scale));transform:rotate(var(--position)) scale(var(--scale))}.charts-pie.polar dd:hover+dd[role="presentation"],.charts-pie.polar dt:hover+dd+dd[role="presentation"]{--scale:calc(var(--value) / 50 * (1 + (50 - var(--value)) / 100));-webkit-transform:rotate(var(--position)) scale(var(--scale));transform:rotate(var(--position)) scale(var(--scale))}}}.charts-line{display:grid;grid-template-columns:repeat(var(--x), minmax(-webkit-min-content, 1fr));grid-template-columns:repeat(var(--x), minmax(min-content, 1fr));grid-template-rows:1fr 1fr;padding-top:calc(32em - 2rem);position:relative}.charts-line::after,.charts-line::before{bottom:4rem;content:"";position:absolute;top:0;width:100%}.charts-line::before{background:linear-gradient(to top, deepskyblue, crimson 75%);-webkit-clip-path:polygon(0% calc(100% - (var(--1) * 100% / var(--y))), calc(100% / var(--x) * 1) calc(100% - (var(--2) * 100% / var(--y))), calc(100% / var(--x) * 2) calc(100% - (var(--3) * 100% / var(--y))), calc(100% / var(--x) * 3) calc(100% - (var(--4) * 100% / var(--y))), calc(100% / var(--x) * 4) calc(100% - (var(--5) * 100% / var(--y))), calc(100% / var(--x) * 5) calc(100% - (var(--6) * 100% / var(--y))), calc(100% / var(--x) * 6) calc(100% - (var(--7) * 100% / var(--y))), calc(100% / var(--x) * 7) calc(100% - (var(--8) * 100% / var(--y))), calc(100% / var(--x) * 8) calc(100% - (var(--9) * 100% / var(--y))), calc(100% / var(--x) * 9) calc(100% - (var(--10) * 100% / var(--y))), calc(100% / var(--x) * 10) calc(100% - (var(--11) * 100% / var(--y))), 100% calc(100% - (var(--12) * 100% / var(--y))), 100% 100%, 0% 100%);clip-path:polygon(0% calc(100% - (var(--1) * 100% / var(--y))), calc(100% / var(--x) * 1) calc(100% - (var(--2) * 100% / var(--y))), calc(100% / var(--x) * 2) calc(100% - (var(--3) * 100% / var(--y))), calc(100% / var(--x) * 3) calc(100% - (var(--4) * 100% / var(--y))), calc(100% / var(--x) * 4) calc(100% - (var(--5) * 100% / var(--y))), calc(100% / var(--x) * 5) calc(100% - (var(--6) * 100% / var(--y))), calc(100% / var(--x) * 6) calc(100% - (var(--7) * 100% / var(--y))), calc(100% / var(--x) * 7) calc(100% - (var(--8) * 100% / var(--y))), calc(100% / var(--x) * 8) calc(100% - (var(--9) * 100% / var(--y))), calc(100% / var(--x) * 9) calc(100% - (var(--10) * 100% / var(--y))), calc(100% / var(--x) * 10) calc(100% - (var(--11) * 100% / var(--y))), 100% calc(100% - (var(--12) * 100% / var(--y))), 100% 100%, 0% 100%);z-index:2}.charts-line::after{--scale:calc(100% / var(--y));background:repeating-linear-gradient(to bottom, white 0%, white var(--scale), rgba(0,0,0,0.25) calc(var(--scale) + 2px));z-index:1}.charts-line dt{grid-row:1 / 1;transition:color .2s linear}.charts-line dt::before{background:rgba(255,255,255,0.25);content:"";height:100%;position:absolute;transition:background .2s linear;top:0;width:1px;z-index:3}.charts-line dt:hover::before{background:#fff}.charts-line dt:hover,.charts-line dt:hover+dd{color:mediumblue}.charts-line dd{grid-row:2 / 2;transition:color .2s linear}.charts-line+figcaption{text-align:center}.fly-out{padding:0}.fly-out,.fly-out ul{list-style:none;margin:0}.fly-out a,.fly-out button{background:white;border:0;color:#444;display:block;margin:0;padding:.5rem 1rem;text-decoration:none}.fly-out a:hover,.fly-out a:focus,.fly-out a:active,.fly-out button:hover,.fly-out button:focus,.fly-out button:active{background:#f5f5f5;border:0;color:#000}.fly-out>*>a:hover,.fly-out>*>a:focus,.fly-out>*>a:active,.fly-out>*>button:hover,.fly-out>*>button:focus,.fly-out>*>button:active{background:none}.fly-out ul{-webkit-box-align:start;align-items:flex-start;background:inherit;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;font-size:small;min-width:100%}.fly-out ul li{min-width:inherit}.fly-out ul a,.fly-out ul button{padding:.5rem 1rem}@media screen and (min-width: 30em){.fly-out,.fly-out ul{display:-webkit-box;display:flex;padding:0}.fly-out a,.fly-out button{white-space:nowrap}.fly-out>*{background:white;position:relative;z-index:1}.fly-out>*:hover,.fly-out>*.focus-within{z-index:2}.fly-out>*>button{padding-right:1rem}.fly-out>*>button::after{content:"↓";display:inline-block;padding-left:.5rem;transition:-webkit-transform .3s ease-in .5s;transition:transform .3s ease-in .5s;transition:transform .3s ease-in .5s, -webkit-transform .3s ease-in .5s;will-change:transform}.fly-out ul{clip:rect(0, 2rem, 2rem, 0);font-size:inherit;padding-top:2.5em;pointer-events:none;position:absolute;top:0;transition:clip .3s ease-in .5s;will-change:clip;z-index:-1}.fly-out ul a,.fly-out ul button{pointer-events:auto}.fly-out>*:hover>ul,.fly-out>*>button:hover+ul,.fly-out>*>button:focus+ul,.fly-out>*>button:active+ul,.fly-out>*.focus-within>ul{box-shadow:.25em .25em 0 0 rgba(105,105,105,0.2);clip:auto;outline:1px solid #a9a9a9;transition:clip .3s ease-out}.fly-out>*>button:hover::after,.fly-out>*>button:focus::after,.fly-out>*>button:active::after,.fly-out>*:hover>button::after,.fly-out>*.focus-within>button::after{-webkit-transform:rotateX(0.5turn);transform:rotateX(0.5turn);transition:-webkit-transform .3s ease-out;transition:transform .3s ease-out;transition:transform .3s ease-out, -webkit-transform .3s ease-out}}@supports ((-webkit-clip-path: circle(150% at top right)) or (clip-path: circle(150% at top right))){@media screen and (min-width: 30em){.fly-out>*:focus-within{z-index:2}.fly-out ul{clip:auto;-webkit-clip-path:circle(1.125em at left top);clip-path:circle(1.125em at left top);transition:-webkit-clip-path .3s ease-in .5s;transition:clip-path .3s ease-in .5s;transition:clip-path .3s ease-in .5s, -webkit-clip-path .3s ease-in .5s;will-change:clip-path}.fly-out>*:hover>ul,.fly-out>*>button:hover+ul,.fly-out>*>button:focus+ul,.fly-out>*>button:active+ul,.fly-out>*:focus-within>ul{box-shadow:.25em .25em 0 0 rgba(105,105,105,0.2);-webkit-clip-path:circle(150% at top right);clip-path:circle(150% at top right);outline:1px solid #a9a9a9;transition:-webkit-clip-path .3s ease-out;transition:clip-path .3s ease-out;transition:clip-path .3s ease-out, -webkit-clip-path .3s ease-out}.fly-out>*:focus-within>button::after{-webkit-transform:rotateX(0.5turn);transform:rotateX(0.5turn);transition:-webkit-transform .3s ease-out;transition:transform .3s ease-out;transition:transform .3s ease-out, -webkit-transform .3s ease-out}}}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
