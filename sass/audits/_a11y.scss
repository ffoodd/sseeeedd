@charset "UTF-8";
// == a11y.css
//
// @author Gaël Poupard
// @lastmodified 2013-11-27
// @subsection Références :
  // @see https://github.com/redroot/holmes/blob/master/holmes.css
  // @see https://github.com/karlgroves/diagnostic.css
  // @see http://www.w3.org/TR/html5/obsolete.html#obsolete
  // @see https://github.com/nternetinspired/debug-css
  // @see Mémento «Sites web — Les bonnes pratiques» aux éditions Eyrolles
  // @author Elie Sloïm, Temesis, Opquast, Openweb — @ElieSl
  // @see "Intégration Web, les bonnes pratiques", pages 335/336.
  // @author Corinne Schillinger, Inseo — @schillinger
// @note On utilise outline plutôt que border afin de ne pas modifier les dimensions des éléments.
// @note Le rouge dénonce une erreur, un code invalide ou un attribut manquant.
// @note Le jaune est une alerte, relevant un balisage erroné ou une mauvaise pratique potentielle.
// @note Le gris signale les éléments obsolètes ou utilisant un attribut obsolète.
// @note Le vert informe d’une amélioration éventuelle.
//


// ----------------------------- //
// Sommaire */
// ----------------------------- //

//
// == Import des sélecteurs
// == Variables, Mixins & Placeholders
//   -- Variables
//   -- Mixins
//   -- Placeholders
// == Détection des conseils
// == Détection des éléments & attributs obsolètes
// == Détection des alertes
// == Détection des erreurs
// == Self-closing
// == Contenu des messages
//


// == @section Import des sélecteurs ====================
@import "selectors/advice";
@import "selectors/obsolete";
@import "selectors/warning";
@import "selectors/error";
@import "selectors/self-closing";


// == @section Variables, Mixins & Placeholders ====================

// -- @subsection Variables --------------------
$error: crimson;
$warning: gold;
$obsolete: gray;
$advice: forestgreen;

$error-ico: \2620\00A0;
$warning-ico: \2622\00A0;
$obsolete-ico: \271D\00A0;
$advice-ico: \2665\00A0;

// -- @subsection Mixins --------------------
@mixin a11y-outline( $level ) {
  outline: 4px solid transparentize( $level, .25 ) !important;
  // @note Astuce suggérée par @7studio pour garantir un affichage homogène des bordures.
  // @see https://github.com/ffoodd/a11y.css/issues/4
  outline-offset: -4px;

  &::after {
    // @note Ceci est basé sur la valeur maximum d’un z-index pour la plupart des navigateurs.
    // @note Si la valeur renseignée est supérieure, les navigateurs la réduise jusqu’à celle-ci.
    // @see http://www.puidokas.com/max-z-index/
    // @note Ça nous permet de garantir que notre message sera toujours visible, et que les plus importants apparaitront en premier.
    @if $level == forestgreen {
      z-index: 2147483644 !important;
    } @else if $level == gray {
      z-index: 2147483645 !important;
    } @else if $level == gold {
      z-index: 2147483646 !important;
    } @else if $level == crimson {
      z-index: 2147483647 !important;
    }
  }
}

// -- @subsection Placeholders --------------------
%a11y-after {
  background: rgba( 255, 255, 255, .98 ) !important;
  border: 1px solid rgba(0, 0, 0, .3) !important;
  color: dimgray !important;
  display: block !important;
  font: normal normal 1rem/2.5 "Arial unicode MS", "Arial", sans-serif !important;
  height: auto !important;
  left: 0 !important;
  min-height: 4em !important;
  opacity: 0;
  // On s’assure que le message ne capte pas le survol.
  pointer-events: none !important;
  position: fixed !important;
  // On fait en sorte de ne pas hériter des mises en formes spéciales: les messages doivent être homogènes.
  text-align: center !important;
  text-decoration: none !important;
  text-shadow: none !important;
  text-transform: none !important;
  // On prépare l’apparition du message.
  top: 0 !important;
  -webkit-transform:  translateY( -100% ) translateZ( 0 ) !important;
  -ms-transform:      translateY( -100% ) translateZ( 0 ) !important;
  transform:          translateY( -100% ) translateZ( 0 ) !important;
  -webkit-transition: -webkit-transform .3s ease-in !important;
  transition:         transform .3s ease-in !important;
  width: 100% !important;
  // Permet de gérer les retours à la ligne éventuels
  // @note Les sauts de ligne peuvent être provoqués par le caractère «\A» dans le message lui-même.
  // @see issue #7 , solution proposée par @7studio
  white-space: pre;
}

%a11y-hover {
  opacity: 1;
  -webkit-transform:  translateY( 0 ) translateZ( 0 ) !important;
  -ms-transform:      translateY( 0 ) translateZ( 0 ) !important;
  transform:          translateY( 0 ) translateZ( 0 ) !important;
  -webkit-transition: -webkit-transform .3s ease-out !important;
  transition:         transform .3s ease-in !important;
}

%a11y-message {
  &::after {
    @extend %a11y-after;
  }

  &:hover::after {
    @extend %a11y-hover;
  }
}


// == @section Détection ====================

// -- @subsection Conseils --------------------
%a11y-advice {
  @include a11y-outline( $advice );
  @extend %a11y-message;
}

// -- @subsection Éléments & attributs obsolètes --------------------
%a11y-obsolete {
  @include a11y-outline( $obsolete );
  @extend %a11y-message;

  &::after {
    content: "#{$obsolete-ico} Élément ou attribut(s) obsolète(s). Merci de bien vouloir vous renseigner avant de faire ce genre de choses." !important;
  }
}

// -- @subsection Alertes --------------------
%a11y-warning {
  @include a11y-outline( $warning );
  @extend %a11y-message;
}

// -- @subsection Erreurs --------------------
%a11y-error {
  @include a11y-outline( $error );
  @extend %a11y-message;
}


// == @section Self-closing ====================
%a11y-self-closing {
  & ~ *::after {
    @extend %a11y-after;
  }

  &:hover ~ *::after {
    @extend %a11y-hover;
  }
}


// == @section Contenu des messages ====================
@import "messages/advice";
@import "messages/warning";
@import "messages/error";
@import "messages/self-closing";
